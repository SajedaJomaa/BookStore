{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Msys\\\\OneDrive\\\\Desktop\\\\BookStore\\\\frontend\\\\src\\\\components\\\\BookImage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport ShowAvailableBooks from './ShowAvailableBooks.js';\nimport { fetchAvailableBooks } from '../services/api-call.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BookImage() {\n  _s();\n  const [booksData, setBooksData] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const observer = useRef(null);\n  useEffect(() => {\n    // const fetchBookData = async (page) => {\n    //     setIsLoading(true);\n    //     try {\n    //         const resData = await fetchAvailableBooks(page);\n    //         const newBooksData = resData.items.map(item => ({\n    //             id: item.id,\n    //             imageLinks: item.volumeInfo\n    //         }));\n    //         setBooksData(prevData => [...prevData, ...newBooksData]);\n    //     } catch (error) {\n    //         console.error('Error fetching book data:', error.message);\n    //     } finally {\n    //         setIsLoading(false);\n    //     }\n    // };\n\n    fetchBookData(page);\n  }, [page]);\n  const lastImageRef = useCallback(node => {\n    if (isLoading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && !isLoading) {\n        setPage(prevPage => prevPage + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [isLoading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ShowAvailableBooks, {\n      booksData: booksData,\n      lastImageRef: lastImageRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(BookImage, \"zociu901xs3ZVRacbVSt2rhAJTg=\");\n_c = BookImage;\nvar _c;\n$RefreshReg$(_c, \"BookImage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","ShowAvailableBooks","fetchAvailableBooks","jsxDEV","_jsxDEV","BookImage","_s","booksData","setBooksData","page","setPage","isLoading","setIsLoading","observer","fetchBookData","lastImageRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPage","observe","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Msys/OneDrive/Desktop/BookStore/frontend/src/components/BookImage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport ShowAvailableBooks from './ShowAvailableBooks.js';\r\nimport { fetchAvailableBooks } from '../services/api-call.js';\r\n\r\nexport default function BookImage() {\r\n    const [booksData, setBooksData] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const observer = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // const fetchBookData = async (page) => {\r\n        //     setIsLoading(true);\r\n        //     try {\r\n        //         const resData = await fetchAvailableBooks(page);\r\n        //         const newBooksData = resData.items.map(item => ({\r\n        //             id: item.id,\r\n        //             imageLinks: item.volumeInfo\r\n        //         }));\r\n        //         setBooksData(prevData => [...prevData, ...newBooksData]);\r\n        //     } catch (error) {\r\n        //         console.error('Error fetching book data:', error.message);\r\n        //     } finally {\r\n        //         setIsLoading(false);\r\n        //     }\r\n        // };\r\n\r\n        fetchBookData(page);\r\n    }, [page]);\r\n\r\n    const lastImageRef = useCallback(node => {\r\n        if (isLoading) return;\r\n        if (observer.current) observer.current.disconnect();\r\n\r\n        observer.current = new IntersectionObserver(entries => {\r\n            if (entries[0].isIntersecting && !isLoading) {\r\n                setPage(prevPage => prevPage + 1);\r\n            }\r\n        });\r\n\r\n        if (node) observer.current.observe(node);\r\n    }, [isLoading]);\r\n\r\n    return (\r\n        <div>\r\n            <ShowAvailableBooks booksData={booksData} lastImageRef={lastImageRef} />\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAOC,kBAAkB,MAAM,yBAAyB;AACxD,SAASC,mBAAmB,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMgB,QAAQ,GAAGd,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACZ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAgB,aAAa,CAACL,IAAI,CAAC;EACvB,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMM,YAAY,GAAGf,WAAW,CAACgB,IAAI,IAAI;IACrC,IAAIL,SAAS,EAAE;IACf,IAAIE,QAAQ,CAACI,OAAO,EAAEJ,QAAQ,CAACI,OAAO,CAACC,UAAU,CAAC,CAAC;IAEnDL,QAAQ,CAACI,OAAO,GAAG,IAAIE,oBAAoB,CAACC,OAAO,IAAI;MACnD,IAAIA,OAAO,CAAC,CAAC,CAAC,CAACC,cAAc,IAAI,CAACV,SAAS,EAAE;QACzCD,OAAO,CAACY,QAAQ,IAAIA,QAAQ,GAAG,CAAC,CAAC;MACrC;IACJ,CAAC,CAAC;IAEF,IAAIN,IAAI,EAAEH,QAAQ,CAACI,OAAO,CAACM,OAAO,CAACP,IAAI,CAAC;EAC5C,CAAC,EAAE,CAACL,SAAS,CAAC,CAAC;EAEf,oBACIP,OAAA;IAAAoB,QAAA,eACIpB,OAAA,CAACH,kBAAkB;MAACM,SAAS,EAAEA,SAAU;MAACQ,YAAY,EAAEA;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEd;AAACtB,EAAA,CA5CuBD,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}