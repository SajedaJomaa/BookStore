{"ast":null,"code":"// import { useNavigate } from 'react-router-dom';\n// import SearchLogic from './SearchLogic.js';\n// import classes from './ShowAvailableBooks.module.css';\n// export default function ShowAvailableBooks({ booksData, lastImageRef, isLoading }) {\n//     const navigate = useNavigate();\n\n//     function handleSelectBook(id) {\n//         navigate(`/book/${id}`);\n//     }\n\n//     return (\n//         <>\n//             <div className={classes.container}>\n//                 <h1 className={classes.siteNameFetch}>Design Books</h1>\n//                 <div >\n//                     <SearchLogic />\n//                 </div>\n//             </div>\n//             <section className={classes.bookscategory}>\n//                 {booksData && booksData.length > 0 ? (\n//                     <ul className={classes.books}>\n//                         {booksData.map((book, index) => {\n//                             const title = book.title || 'No Title';\n//                             if (title === 'No Title') {\n//                                 return null;\n//                             }\n\n//                             return (\n//                                 <li key={`${book.id}-${index}`} className={classes.bookitem}>\n//                                     {book.imageLinks && book.imageLinks.thumbnail ? (\n//                                         <button onClick={() => handleSelectBook(book.id)}>\n//                                             {isLoading ? (\n//                                                 <div className={classes.skeletoncard}>\n//                                                     <div className={classes.skeletonimage}></div>\n//                                                     <div className={classes.skeletontitle}></div>\n//                                                 </div>\n//                                             ) : (\n//                                                 <>\n//                                                     <img\n//                                                         src={book.imageLinks.thumbnail}\n//                                                         alt={`Book ${index + 1}`}\n//                                                         ref={index === booksData.length - 1 ? lastImageRef : null}\n//                                                     />\n//                                                     <p className={classes.booktitle}>{title}</p>\n//                                                 </>\n//                                             )}\n//                                         </button>\n//                                     ) : (\n//                                         <p>No image available</p>\n//                                     )}\n//                                 </li>\n//                             );\n//                         })}\n//                     </ul>\n//                 ) : (\n//                     <p>Loading...</p>\n//                 )}\n//             </section>\n//         </>\n\n//     );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Msys/OneDrive/Desktop/BookStore/frontend/src/components/ShowAvailableBooks.js"],"sourcesContent":["// import { useNavigate } from 'react-router-dom';\r\n// import SearchLogic from './SearchLogic.js';\r\n// import classes from './ShowAvailableBooks.module.css';\r\n// export default function ShowAvailableBooks({ booksData, lastImageRef, isLoading }) {\r\n//     const navigate = useNavigate();\r\n\r\n//     function handleSelectBook(id) {\r\n//         navigate(`/book/${id}`);\r\n//     }\r\n\r\n//     return (\r\n//         <>\r\n//             <div className={classes.container}>\r\n//                 <h1 className={classes.siteNameFetch}>Design Books</h1>\r\n//                 <div >\r\n//                     <SearchLogic />\r\n//                 </div>\r\n//             </div>\r\n//             <section className={classes.bookscategory}>\r\n//                 {booksData && booksData.length > 0 ? (\r\n//                     <ul className={classes.books}>\r\n//                         {booksData.map((book, index) => {\r\n//                             const title = book.title || 'No Title';\r\n//                             if (title === 'No Title') {\r\n//                                 return null;\r\n//                             }\r\n\r\n//                             return (\r\n//                                 <li key={`${book.id}-${index}`} className={classes.bookitem}>\r\n//                                     {book.imageLinks && book.imageLinks.thumbnail ? (\r\n//                                         <button onClick={() => handleSelectBook(book.id)}>\r\n//                                             {isLoading ? (\r\n//                                                 <div className={classes.skeletoncard}>\r\n//                                                     <div className={classes.skeletonimage}></div>\r\n//                                                     <div className={classes.skeletontitle}></div>\r\n//                                                 </div>\r\n//                                             ) : (\r\n//                                                 <>\r\n//                                                     <img\r\n//                                                         src={book.imageLinks.thumbnail}\r\n//                                                         alt={`Book ${index + 1}`}\r\n//                                                         ref={index === booksData.length - 1 ? lastImageRef : null}\r\n//                                                     />\r\n//                                                     <p className={classes.booktitle}>{title}</p>\r\n//                                                 </>\r\n//                                             )}\r\n//                                         </button>\r\n//                                     ) : (\r\n//                                         <p>No image available</p>\r\n//                                     )}\r\n//                                 </li>\r\n//                             );\r\n//                         })}\r\n//                     </ul>\r\n//                 ) : (\r\n//                     <p>Loading...</p>\r\n//                 )}\r\n//             </section>\r\n//         </>\r\n\r\n//     );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}