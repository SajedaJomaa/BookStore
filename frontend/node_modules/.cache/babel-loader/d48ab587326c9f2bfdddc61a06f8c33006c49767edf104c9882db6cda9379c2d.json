{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import SearchBar from './SearchBar.js';\n// import ShowResults from './ShowResults.js';\n\n// export default function SearchLogic() {\n//     const [query, setQuery] = useState('');\n//     const [searchResults, setSearchResults] = useState([]);\n//     const [isDropdownVisible, setIsDropdownVisible] = useState(false);\n//     const navigate = useNavigate();\n\n//     const handleInputChange = (e) => {\n//         const value = e.target.value;\n//         setQuery(value);\n//         if (value.length > 0) {\n//             setIsDropdownVisible(true);\n//             fetchSearchResults(value);\n//         } else {\n//             setIsDropdownVisible(false);\n//         }\n//     };\n\n//     const fetchSearchResults = async (query) => {\n//         try {\n//             const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n//             const data = await response.json();\n//             setSearchResults(data.items || []);\n//         } catch (error) {\n//             console.error('Error fetching search results:', error);\n//         }\n//     };\n\n//     const handleSearch = () => {\n//         if (query.trim()) {\n//             fetchSearchResults(query);\n//             setIsDropdownVisible(true);\n//             navigate('/search');\n//         } else {\n//             setSearchResults([]);\n//             setIsDropdownVisible(false);\n//         }\n//     };\n\n//     const handleBookSelect = (book) => {\n//         setQuery(book.volumeInfo.title);\n//         setIsDropdownVisible(false);\n//         navigate(`/book/${book.id}`);\n//     };\n\n//     return (\n//         <>\n//             {searchResults.length > 0 ? (\n//                 <ShowResults\n//                     booksData={searchResults}\n//                     onBookSelect={handleBookSelect}\n//                 />\n//             ) : (\n//                 <SearchBar\n//                     query={query}\n//                     isDropdownVisible={isDropdownVisible}\n//                     onInputChange={handleInputChange}\n//                     onSearch={handleSearch}\n//                     onBookSelect={handleBookSelect}\n//                 />\n//             )}\n//         </>\n//     );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Msys/OneDrive/Desktop/tryAgain/frontend/src/components/SearchLogic.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import SearchBar from './SearchBar.js';\r\n// import ShowResults from './ShowResults.js';\r\n\r\n// export default function SearchLogic() {\r\n//     const [query, setQuery] = useState('');\r\n//     const [searchResults, setSearchResults] = useState([]);\r\n//     const [isDropdownVisible, setIsDropdownVisible] = useState(false);\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleInputChange = (e) => {\r\n//         const value = e.target.value;\r\n//         setQuery(value);\r\n//         if (value.length > 0) {\r\n//             setIsDropdownVisible(true);\r\n//             fetchSearchResults(value);\r\n//         } else {\r\n//             setIsDropdownVisible(false);\r\n//         }\r\n//     };\r\n\r\n//     const fetchSearchResults = async (query) => {\r\n//         try {\r\n//             const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\r\n//             const data = await response.json();\r\n//             setSearchResults(data.items || []);\r\n//         } catch (error) {\r\n//             console.error('Error fetching search results:', error);\r\n//         }\r\n//     };\r\n\r\n//     const handleSearch = () => {\r\n//         if (query.trim()) {\r\n//             fetchSearchResults(query);\r\n//             setIsDropdownVisible(true);\r\n//             navigate('/search');\r\n//         } else {\r\n//             setSearchResults([]);\r\n//             setIsDropdownVisible(false);\r\n//         }\r\n//     };\r\n\r\n//     const handleBookSelect = (book) => {\r\n//         setQuery(book.volumeInfo.title);\r\n//         setIsDropdownVisible(false);\r\n//         navigate(`/book/${book.id}`);\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             {searchResults.length > 0 ? (\r\n//                 <ShowResults\r\n//                     booksData={searchResults}\r\n//                     onBookSelect={handleBookSelect}\r\n//                 />\r\n//             ) : (\r\n//                 <SearchBar\r\n//                     query={query}\r\n//                     isDropdownVisible={isDropdownVisible}\r\n//                     onInputChange={handleInputChange}\r\n//                     onSearch={handleSearch}\r\n//                     onBookSelect={handleBookSelect}\r\n//                 />\r\n//             )}\r\n//         </>\r\n//     );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}