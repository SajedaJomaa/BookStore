{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Msys\\\\OneDrive\\\\Desktop\\\\tryAgain\\\\frontend\\\\src\\\\components\\\\SearchLogic.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import { useNavigate } from 'react-router-dom';\n// // import SearchBar from './SearchBar.js';\n// // import ShowResults from './ShowResults.js';\n\n// // export default function SearchLogic() {\n// //     const [query, setQuery] = useState('');\n// //     const [searchResults, setSearchResults] = useState([]);\n// //     const [isDropdownVisible, setIsDropdownVisible] = useState(false);\n// //     const navigate = useNavigate();\n\n// //     const handleInputChange = (e) => {\n// //         const value = e.target.value;\n// //         setQuery(value);\n// //         if (value.length > 0) {\n// //             setIsDropdownVisible(true);\n// //             fetchSearchResults(value);\n// //         } else {\n// //             setIsDropdownVisible(false);\n// //         }\n// //     };\n\n// //     const fetchSearchResults = async (query) => {\n// //         try {\n// //             const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n// //             const data = await response.json();\n// //             setSearchResults(data.items || []);\n// //         } catch (error) {\n// //             console.error('Error fetching search results:', error);\n// //         }\n// //     };\n\n// //     const handleSearch = () => {\n// //         if (query.trim()) {\n// //             fetchSearchResults(query);\n// //             setIsDropdownVisible(true);\n// //             navigate('/search');\n// //         } else {\n// //             setSearchResults([]);\n// //             setIsDropdownVisible(false);\n// //         }\n// //     };\n\n// //     const handleBookSelect = (book) => {\n// //         setQuery(book.volumeInfo.title);\n// //         setIsDropdownVisible(false);\n// //         navigate(`/book/${book.id}`);\n// //     };\n\n// //     return (\n// //         <>\n// //             {searchResults.length > 0 ? (\n// //                 <ShowResults\n// //                     booksData={searchResults}\n// //                     onBookSelect={handleBookSelect}\n// //                 />\n// //             ) : (\n// //                 <SearchBar\n// //                     query={query}\n// //                     isDropdownVisible={isDropdownVisible}\n// //                     onInputChange={handleInputChange}\n// //                     onSearch={handleSearch}\n// //                     onBookSelect={handleBookSelect}\n// //                 />\n// //             )}\n// //         </>\n// //     );\n// // }\n\n// import React, { useState, useEffect } from 'react';\n// import ShowResults from './ShowResults';\n\n// export default function SearchLogic({ query, handleBookSelect }) {\n//     const [searchResults, setSearchResults] = useState([]);\n\n//     useEffect(() => {\n//         const fetchSearchResults = async (query) => {\n//             try {\n//                 const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n//                 const data = await response.json();\n//                 setSearchResults(data.items || []);\n//             } catch (error) {\n//                 console.error('Error fetching search results:', error);\n//             }\n//         };\n\n//         if (query.trim()) {\n//             fetchSearchResults(query);\n//         }\n//     }, [query]);\n\n//     return (\n//         <>\n//             <ShowResults\n//                 booksData={searchResults}\n//                 onBookSelect={handleBookSelect}\n//             />\n//         </>\n//     );\n// }\n\n// import React, { useState, useEffect } from 'react';\n// import ShowResults from './ShowResults';\n\n// export default function SearchLogic({ query, handleBookSelect }) {\n//     const [searchResults, setSearchResults] = useState([]);\n\n//     useEffect(() => {\n//         const fetchSearchResults = async () => {\n//             try {\n//                 const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n//                 const data = await response.json();\n//                 console.log('Search API response:', data);\n//                 setSearchResults(data.items || []);\n//             } catch (error) {\n//                 console.error('Error fetching search results:', error);\n//             }\n//         };\n\n//         if (query.trim()) {\n//             fetchSearchResults();\n//         }\n//     }, [query]);\n\n//     return (\n//         <div className=\"search-results-container\">\n//             <ShowResults\n//                 booksData={searchResults}\n//                 onBookSelect={handleBookSelect}\n//             />\n//         </div>\n//     );\n// }\n\nimport React, { useState, useEffect } from 'react';\nimport ShowResults from './ShowResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchLogic({\n  query,\n  handleBookSelect\n}) {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    const fetchSearchResults = async () => {\n      console.log('Fetching search results for query:', query);\n      try {\n        const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n        const data = await response.json();\n        console.log('Search API response:', data);\n        setSearchResults(data.items || []);\n      } catch (error) {\n        console.error('Error fetching search results:', error);\n      }\n    };\n    if (query.trim()) {\n      fetchSearchResults();\n    }\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-results\",\n    children: searchResults.length > 0 ? searchResults.map((book, index) => {\n      var _book$volumeInfo$imag, _book$volumeInfo$auth;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-result\",\n        onClick: () => handleBookSelect(book),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: (_book$volumeInfo$imag = book.volumeInfo.imageLinks) === null || _book$volumeInfo$imag === void 0 ? void 0 : _book$volumeInfo$imag.thumbnail,\n          alt: book.volumeInfo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: book.volumeInfo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: (_book$volumeInfo$auth = book.volumeInfo.authors) === null || _book$volumeInfo$auth === void 0 ? void 0 : _book$volumeInfo$auth.join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No results found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n}\n_s(SearchLogic, \"kOHW2sW0vG6natLQlSoo4BL0IQc=\");\n_c = SearchLogic;\nexport default SearchLogic;\nvar _c;\n$RefreshReg$(_c, \"SearchLogic\");","map":{"version":3,"names":["React","useState","useEffect","ShowResults","jsxDEV","_jsxDEV","SearchLogic","query","handleBookSelect","_s","searchResults","setSearchResults","fetchSearchResults","console","log","response","fetch","data","json","items","error","trim","className","children","length","map","book","index","_book$volumeInfo$imag","_book$volumeInfo$auth","onClick","src","volumeInfo","imageLinks","thumbnail","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","authors","join","_c","$RefreshReg$"],"sources":["C:/Users/Msys/OneDrive/Desktop/tryAgain/frontend/src/components/SearchLogic.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n// // import { useNavigate } from 'react-router-dom';\r\n// // import SearchBar from './SearchBar.js';\r\n// // import ShowResults from './ShowResults.js';\r\n\r\n// // export default function SearchLogic() {\r\n// //     const [query, setQuery] = useState('');\r\n// //     const [searchResults, setSearchResults] = useState([]);\r\n// //     const [isDropdownVisible, setIsDropdownVisible] = useState(false);\r\n// //     const navigate = useNavigate();\r\n\r\n// //     const handleInputChange = (e) => {\r\n// //         const value = e.target.value;\r\n// //         setQuery(value);\r\n// //         if (value.length > 0) {\r\n// //             setIsDropdownVisible(true);\r\n// //             fetchSearchResults(value);\r\n// //         } else {\r\n// //             setIsDropdownVisible(false);\r\n// //         }\r\n// //     };\r\n\r\n// //     const fetchSearchResults = async (query) => {\r\n// //         try {\r\n// //             const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\r\n// //             const data = await response.json();\r\n// //             setSearchResults(data.items || []);\r\n// //         } catch (error) {\r\n// //             console.error('Error fetching search results:', error);\r\n// //         }\r\n// //     };\r\n\r\n// //     const handleSearch = () => {\r\n// //         if (query.trim()) {\r\n// //             fetchSearchResults(query);\r\n// //             setIsDropdownVisible(true);\r\n// //             navigate('/search');\r\n// //         } else {\r\n// //             setSearchResults([]);\r\n// //             setIsDropdownVisible(false);\r\n// //         }\r\n// //     };\r\n\r\n// //     const handleBookSelect = (book) => {\r\n// //         setQuery(book.volumeInfo.title);\r\n// //         setIsDropdownVisible(false);\r\n// //         navigate(`/book/${book.id}`);\r\n// //     };\r\n\r\n// //     return (\r\n// //         <>\r\n// //             {searchResults.length > 0 ? (\r\n// //                 <ShowResults\r\n// //                     booksData={searchResults}\r\n// //                     onBookSelect={handleBookSelect}\r\n// //                 />\r\n// //             ) : (\r\n// //                 <SearchBar\r\n// //                     query={query}\r\n// //                     isDropdownVisible={isDropdownVisible}\r\n// //                     onInputChange={handleInputChange}\r\n// //                     onSearch={handleSearch}\r\n// //                     onBookSelect={handleBookSelect}\r\n// //                 />\r\n// //             )}\r\n// //         </>\r\n// //     );\r\n// // }\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import ShowResults from './ShowResults';\r\n\r\n// export default function SearchLogic({ query, handleBookSelect }) {\r\n//     const [searchResults, setSearchResults] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         const fetchSearchResults = async (query) => {\r\n//             try {\r\n//                 const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\r\n//                 const data = await response.json();\r\n//                 setSearchResults(data.items || []);\r\n//             } catch (error) {\r\n//                 console.error('Error fetching search results:', error);\r\n//             }\r\n//         };\r\n\r\n//         if (query.trim()) {\r\n//             fetchSearchResults(query);\r\n//         }\r\n//     }, [query]);\r\n\r\n//     return (\r\n//         <>\r\n//             <ShowResults\r\n//                 booksData={searchResults}\r\n//                 onBookSelect={handleBookSelect}\r\n//             />\r\n//         </>\r\n//     );\r\n// }\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import ShowResults from './ShowResults';\r\n\r\n// export default function SearchLogic({ query, handleBookSelect }) {\r\n//     const [searchResults, setSearchResults] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         const fetchSearchResults = async () => {\r\n//             try {\r\n//                 const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\r\n//                 const data = await response.json();\r\n//                 console.log('Search API response:', data);\r\n//                 setSearchResults(data.items || []);\r\n//             } catch (error) {\r\n//                 console.error('Error fetching search results:', error);\r\n//             }\r\n//         };\r\n\r\n//         if (query.trim()) {\r\n//             fetchSearchResults();\r\n//         }\r\n//     }, [query]);\r\n\r\n//     return (\r\n//         <div className=\"search-results-container\">\r\n//             <ShowResults\r\n//                 booksData={searchResults}\r\n//                 onBookSelect={handleBookSelect}\r\n//             />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport ShowResults from './ShowResults';\r\n\r\nfunction SearchLogic({ query, handleBookSelect }) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchSearchResults = async () => {\r\n            console.log('Fetching search results for query:', query);\r\n            try {\r\n                const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\r\n                const data = await response.json();\r\n                console.log('Search API response:', data);\r\n                setSearchResults(data.items || []);\r\n            } catch (error) {\r\n                console.error('Error fetching search results:', error);\r\n            }\r\n        };\r\n\r\n        if (query.trim()) {\r\n            fetchSearchResults();\r\n        }\r\n    }, [query]);\r\n\r\n    return (\r\n\r\n        <div className=\"search-results\">\r\n            {searchResults.length > 0 ? (\r\n                searchResults.map((book, index) => (\r\n                    <div key={index} className=\"search-result\" onClick={() => handleBookSelect(book)}>\r\n                        <img src={book.volumeInfo.imageLinks?.thumbnail} alt={book.volumeInfo.title} />\r\n                        <div>\r\n                            <h3>{book.volumeInfo.title}</h3>\r\n                            <p>{book.volumeInfo.authors?.join(', ')}</p>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>No results found.</p>\r\n            )}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SearchLogic;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAAC;EAAEC,KAAK;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EAC9C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACZ,MAAMU,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACnCC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEP,KAAK,CAAC;MACxD,IAAI;QACA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,iDAAiDT,KAAK,EAAE,CAAC;QACtF,MAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEG,IAAI,CAAC;QACzCN,gBAAgB,CAACM,IAAI,CAACE,KAAK,IAAI,EAAE,CAAC;MACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZP,OAAO,CAACO,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MAC1D;IACJ,CAAC;IAED,IAAIb,KAAK,CAACc,IAAI,CAAC,CAAC,EAAE;MACdT,kBAAkB,CAAC,CAAC;IACxB;EACJ,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;EAEX,oBAEIF,OAAA;IAAKiB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC1Bb,aAAa,CAACc,MAAM,GAAG,CAAC,GACrBd,aAAa,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK;MAAA,IAAAC,qBAAA,EAAAC,qBAAA;MAAA,oBAC1BxB,OAAA;QAAiBiB,SAAS,EAAC,eAAe;QAACQ,OAAO,EAAEA,CAAA,KAAMtB,gBAAgB,CAACkB,IAAI,CAAE;QAAAH,QAAA,gBAC7ElB,OAAA;UAAK0B,GAAG,GAAAH,qBAAA,GAAEF,IAAI,CAACM,UAAU,CAACC,UAAU,cAAAL,qBAAA,uBAA1BA,qBAAA,CAA4BM,SAAU;UAACC,GAAG,EAAET,IAAI,CAACM,UAAU,CAACI;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/EnC,OAAA;UAAAkB,QAAA,gBACIlB,OAAA;YAAAkB,QAAA,EAAKG,IAAI,CAACM,UAAU,CAACI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAChCnC,OAAA;YAAAkB,QAAA,GAAAM,qBAAA,GAAIH,IAAI,CAACM,UAAU,CAACS,OAAO,cAAAZ,qBAAA,uBAAvBA,qBAAA,CAAyBa,IAAI,CAAC,IAAI;UAAC;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC;MAAA,GALAb,KAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CAAC;IAAA,CACT,CAAC,gBAEFnC,OAAA;MAAAkB,QAAA,EAAG;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC1B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAGd;AAAC/B,EAAA,CAxCQH,WAAW;AAAAqC,EAAA,GAAXrC,WAAW;AA0CpB,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}