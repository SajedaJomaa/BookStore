{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Msys\\\\OneDrive\\\\Desktop\\\\BookStore - Copy\\\\frontend\\\\src\\\\components\\\\SearchLogic.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import SearchBar from './SearchBar.js';\n\n// export default function SearchLogic() {\n//     const [query, setQuery] = useState('');\n//     const [searchResults, setSearchResults] = useState([]);\n//     const [isDropdownVisible, setIsDropdownVisible] = useState(false);\n//     const navigate = useNavigate();\n\n//     const handleInputChange = (e) => {\n//         const value = e.target.value;\n//         setQuery(value);\n//         if (value.length > 0) {\n//             setIsDropdownVisible(true);\n//             fetchSearchResults(value);\n//         } else {\n//             setIsDropdownVisible(false);\n//             setSearchResults([]);\n//         }\n//     };\n\n//     const fetchSearchResults = async (query) => {\n//         try {\n//             const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n//             const data = await response.json();\n//             setSearchResults(data.items || []);\n//         } catch (error) {\n//             console.error('Error fetching search results:', error);\n//         }\n//     };\n\n//     const handleBookSelect = (book) => {\n//         setQuery(book.volumeInfo.title);\n//         setIsDropdownVisible(false);\n//         navigate(`/book/${book.id}`);\n//     };\n\n//     return (\n//         <div className='resultOutPut'>\n//             <SearchBar\n//                 query={query}\n//                 isDropdownVisible={isDropdownVisible}\n//                 searchResults={searchResults}\n//                 onInputChange={handleInputChange}\n//                 onBookSelect={handleBookSelect}\n//             />\n//         </div>\n//     );\n// }\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Subject } from 'rxjs';\nimport { debounceTime, switchMap } from 'rxjs/operators';\nimport SearchBar from './SearchBar.js';\nimport { fetchSearchResults } from '../services/api-call.js'; // Ensure this function fetches data as before\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchLogic() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isDropdownVisible, setIsDropdownVisible] = useState(false);\n  const navigate = useNavigate();\n  const searchSubject = new Subject();\n  useEffect(() => {\n    const subscription = searchSubject.pipe(debounceTime(300),\n    // Wait for 300ms pause in events\n    switchMap(value => fetchSearchResults(value))).subscribe(results => {\n      setSearchResults(results);\n      setIsDropdownVisible(results.length > 0);\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setQuery(value);\n    if (value.length > 0) {\n      setIsDropdownVisible(true);\n      searchSubject.next(value); // Emit the value to the observable\n    } else {\n      setIsDropdownVisible(false);\n      setSearchResults([]);\n    }\n  };\n  const handleBookSelect = book => {\n    setQuery(book.volumeInfo.title);\n    setIsDropdownVisible(false);\n    navigate(`/book/${book.id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resultOutPut\",\n    children: /*#__PURE__*/_jsxDEV(SearchBar, {\n      query: query,\n      isDropdownVisible: isDropdownVisible,\n      searchResults: searchResults,\n      onInputChange: handleInputChange,\n      onBookSelect: handleBookSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n_s(SearchLogic, \"bIpfA5ZBNpUbhoJX4o9emr79vB4=\", false, function () {\n  return [useNavigate];\n});\n_c = SearchLogic;\nvar _c;\n$RefreshReg$(_c, \"SearchLogic\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Subject","debounceTime","switchMap","SearchBar","fetchSearchResults","jsxDEV","_jsxDEV","SearchLogic","_s","query","setQuery","searchResults","setSearchResults","isDropdownVisible","setIsDropdownVisible","navigate","searchSubject","subscription","pipe","value","subscribe","results","length","unsubscribe","handleInputChange","e","target","next","handleBookSelect","book","volumeInfo","title","id","className","children","onInputChange","onBookSelect","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Msys/OneDrive/Desktop/BookStore - Copy/frontend/src/components/SearchLogic.js"],"sourcesContent":["\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import SearchBar from './SearchBar.js';\r\n\r\n// export default function SearchLogic() {\r\n//     const [query, setQuery] = useState('');\r\n//     const [searchResults, setSearchResults] = useState([]);\r\n//     const [isDropdownVisible, setIsDropdownVisible] = useState(false);\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleInputChange = (e) => {\r\n//         const value = e.target.value;\r\n//         setQuery(value);\r\n//         if (value.length > 0) {\r\n//             setIsDropdownVisible(true);\r\n//             fetchSearchResults(value);\r\n//         } else {\r\n//             setIsDropdownVisible(false);\r\n//             setSearchResults([]);\r\n//         }\r\n//     };\r\n\r\n//     const fetchSearchResults = async (query) => {\r\n//         try {\r\n//             const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\r\n//             const data = await response.json();\r\n//             setSearchResults(data.items || []);\r\n//         } catch (error) {\r\n//             console.error('Error fetching search results:', error);\r\n//         }\r\n//     };\r\n\r\n//     const handleBookSelect = (book) => {\r\n//         setQuery(book.volumeInfo.title);\r\n//         setIsDropdownVisible(false);\r\n//         navigate(`/book/${book.id}`);\r\n//     };\r\n\r\n//     return (\r\n//         <div className='resultOutPut'>\r\n//             <SearchBar\r\n//                 query={query}\r\n//                 isDropdownVisible={isDropdownVisible}\r\n//                 searchResults={searchResults}\r\n//                 onInputChange={handleInputChange}\r\n//                 onBookSelect={handleBookSelect}\r\n//             />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, switchMap } from 'rxjs/operators';\r\nimport SearchBar from './SearchBar.js';\r\nimport { fetchSearchResults } from '../services/api-call.js'; // Ensure this function fetches data as before\r\n\r\nexport default function SearchLogic() {\r\n    const [query, setQuery] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [isDropdownVisible, setIsDropdownVisible] = useState(false);\r\n    const navigate = useNavigate();\r\n    const searchSubject = new Subject();\r\n\r\n    useEffect(() => {\r\n        const subscription = searchSubject\r\n            .pipe(\r\n                debounceTime(300), // Wait for 300ms pause in events\r\n                switchMap(value => fetchSearchResults(value))\r\n            )\r\n            .subscribe(results => {\r\n                setSearchResults(results);\r\n                setIsDropdownVisible(results.length > 0);\r\n            });\r\n\r\n        return () => {\r\n            subscription.unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    const handleInputChange = (e) => {\r\n        const value = e.target.value;\r\n        setQuery(value);\r\n        if (value.length > 0) {\r\n            setIsDropdownVisible(true);\r\n            searchSubject.next(value); // Emit the value to the observable\r\n        } else {\r\n            setIsDropdownVisible(false);\r\n            setSearchResults([]);\r\n        }\r\n    };\r\n\r\n    const handleBookSelect = (book) => {\r\n        setQuery(book.volumeInfo.title);\r\n        setIsDropdownVisible(false);\r\n        navigate(`/book/${book.id}`);\r\n    };\r\n\r\n    return (\r\n        <div className='resultOutPut'>\r\n            <SearchBar\r\n                query={query}\r\n                isDropdownVisible={isDropdownVisible}\r\n                searchResults={searchResults}\r\n                onInputChange={handleInputChange}\r\n                onBookSelect={handleBookSelect}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}