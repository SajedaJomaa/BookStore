{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Msys\\\\OneDrive\\\\Desktop\\\\tryAgain\\\\frontend\\\\src\\\\components\\\\SearchLogic.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import SearchBar from './SearchBar.js';\n// import ShowResults from './ShowResults.js';\n\n// export default function SearchLogic() {\n//     const [query, setQuery] = useState('');\n//     const [searchResults, setSearchResults] = useState([]);\n//     const [isDropdownVisible, setIsDropdownVisible] = useState(false);\n//     const navigate = useNavigate();\n\n//     const handleInputChange = (e) => {\n//         const value = e.target.value;\n//         setQuery(value);\n//         if (value.length > 0) {\n//             setIsDropdownVisible(true);\n//             fetchSearchResults(value);\n//         } else {\n//             setIsDropdownVisible(false);\n//         }\n//     };\n\n//     const fetchSearchResults = async (query) => {\n//         try {\n//             const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n//             const data = await response.json();\n//             setSearchResults(data.items || []);\n//         } catch (error) {\n//             console.error('Error fetching search results:', error);\n//         }\n//     };\n\n//     const handleSearch = () => {\n//         if (query.trim()) {\n//             fetchSearchResults(query);\n//             setIsDropdownVisible(true);\n//             navigate('/search');\n//         } else {\n//             setSearchResults([]);\n//             setIsDropdownVisible(false);\n//         }\n//     };\n\n//     const handleBookSelect = (book) => {\n//         setQuery(book.volumeInfo.title);\n//         setIsDropdownVisible(false);\n//         navigate(`/book/${book.id}`);\n//     };\n\n//     return (\n//         <>\n//             {searchResults.length > 0 ? (\n//                 <ShowResults\n//                     booksData={searchResults}\n//                     onBookSelect={handleBookSelect}\n//                 />\n//             ) : (\n//                 <SearchBar\n//                     query={query}\n//                     isDropdownVisible={isDropdownVisible}\n//                     searchResults={searchResults}\n//                     onInputChange={handleInputChange}\n//                     onSearch={handleSearch}\n//                     onBookSelect={handleBookSelect}\n//                 />\n//             )}\n//         </>\n//     );\n// }\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ShowResults from './ShowResults';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SearchLogic({\n  query,\n  onInputChange\n}) {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [isDropdownVisible, setIsDropdownVisible] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (query.length > 0) {\n      fetchSearchResults(query);\n      setIsDropdownVisible(true);\n    } else {\n      setIsDropdownVisible(false);\n    }\n  }, [query]);\n  const fetchSearchResults = async query => {\n    try {\n      const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n      const data = await response.json();\n      setSearchResults(data.items || []);\n    } catch (error) {\n      console.error('Error fetching search results:', error);\n    }\n  };\n  const handleBookSelect = book => {\n    onInputChange({\n      target: {\n        value: book.volumeInfo.title\n      }\n    });\n    setIsDropdownVisible(false);\n    navigate(`/book/${book.id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ShowResults, {\n      booksData: searchResults,\n      onBookSelect: handleBookSelect,\n      isDropdownVisible: isDropdownVisible\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(SearchLogic, \"fgl0YdJ9ubSNZ5W7mwWzurI+ZS0=\", false, function () {\n  return [useNavigate];\n});\n_c = SearchLogic;\nvar _c;\n$RefreshReg$(_c, \"SearchLogic\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","ShowResults","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchLogic","query","onInputChange","_s","searchResults","setSearchResults","isDropdownVisible","setIsDropdownVisible","navigate","length","fetchSearchResults","response","fetch","data","json","items","error","console","handleBookSelect","book","target","value","volumeInfo","title","id","children","booksData","onBookSelect","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Msys/OneDrive/Desktop/tryAgain/frontend/src/components/SearchLogic.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import SearchBar from './SearchBar.js';\r\n// import ShowResults from './ShowResults.js';\r\n\r\n// export default function SearchLogic() {\r\n//     const [query, setQuery] = useState('');\r\n//     const [searchResults, setSearchResults] = useState([]);\r\n//     const [isDropdownVisible, setIsDropdownVisible] = useState(false);\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleInputChange = (e) => {\r\n//         const value = e.target.value;\r\n//         setQuery(value);\r\n//         if (value.length > 0) {\r\n//             setIsDropdownVisible(true);\r\n//             fetchSearchResults(value);\r\n//         } else {\r\n//             setIsDropdownVisible(false);\r\n//         }\r\n//     };\r\n\r\n//     const fetchSearchResults = async (query) => {\r\n//         try {\r\n//             const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\r\n//             const data = await response.json();\r\n//             setSearchResults(data.items || []);\r\n//         } catch (error) {\r\n//             console.error('Error fetching search results:', error);\r\n//         }\r\n//     };\r\n\r\n//     const handleSearch = () => {\r\n//         if (query.trim()) {\r\n//             fetchSearchResults(query);\r\n//             setIsDropdownVisible(true);\r\n//             navigate('/search');\r\n//         } else {\r\n//             setSearchResults([]);\r\n//             setIsDropdownVisible(false);\r\n//         }\r\n//     };\r\n\r\n//     const handleBookSelect = (book) => {\r\n//         setQuery(book.volumeInfo.title);\r\n//         setIsDropdownVisible(false);\r\n//         navigate(`/book/${book.id}`);\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             {searchResults.length > 0 ? (\r\n//                 <ShowResults\r\n//                     booksData={searchResults}\r\n//                     onBookSelect={handleBookSelect}\r\n//                 />\r\n//             ) : (\r\n//                 <SearchBar\r\n//                     query={query}\r\n//                     isDropdownVisible={isDropdownVisible}\r\n//                     searchResults={searchResults}\r\n//                     onInputChange={handleInputChange}\r\n//                     onSearch={handleSearch}\r\n//                     onBookSelect={handleBookSelect}\r\n//                 />\r\n//             )}\r\n//         </>\r\n//     );\r\n// }\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ShowResults from './ShowResults';\r\n\r\nexport default function SearchLogic({ query, onInputChange }) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [isDropdownVisible, setIsDropdownVisible] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (query.length > 0) {\r\n            fetchSearchResults(query);\r\n            setIsDropdownVisible(true);\r\n        } else {\r\n            setIsDropdownVisible(false);\r\n        }\r\n    }, [query]);\r\n\r\n    const fetchSearchResults = async (query) => {\r\n        try {\r\n            const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\r\n            const data = await response.json();\r\n            setSearchResults(data.items || []);\r\n        } catch (error) {\r\n            console.error('Error fetching search results:', error);\r\n        }\r\n    };\r\n\r\n    const handleBookSelect = (book) => {\r\n        onInputChange({ target: { value: book.volumeInfo.title } });\r\n        setIsDropdownVisible(false);\r\n        navigate(`/book/${book.id}`);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ShowResults\r\n                booksData={searchResults}\r\n                onBookSelect={handleBookSelect}\r\n                isDropdownVisible={isDropdownVisible}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,eAAe,SAASC,WAAWA,CAAC;EAAEC,KAAK;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EAC1D,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACa,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAMe,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZ,IAAIS,KAAK,CAACQ,MAAM,GAAG,CAAC,EAAE;MAClBC,kBAAkB,CAACT,KAAK,CAAC;MACzBM,oBAAoB,CAAC,IAAI,CAAC;IAC9B,CAAC,MAAM;MACHA,oBAAoB,CAAC,KAAK,CAAC;IAC/B;EACJ,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EAEX,MAAMS,kBAAkB,GAAG,MAAOT,KAAK,IAAK;IACxC,IAAI;MACA,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,iDAAiDX,KAAK,EAAE,CAAC;MACtF,MAAMY,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCT,gBAAgB,CAACQ,IAAI,CAACE,KAAK,IAAI,EAAE,CAAC;IACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IAC1D;EACJ,CAAC;EAED,MAAME,gBAAgB,GAAIC,IAAI,IAAK;IAC/BjB,aAAa,CAAC;MAAEkB,MAAM,EAAE;QAAEC,KAAK,EAAEF,IAAI,CAACG,UAAU,CAACC;MAAM;IAAE,CAAC,CAAC;IAC3DhB,oBAAoB,CAAC,KAAK,CAAC;IAC3BC,QAAQ,CAAC,SAASW,IAAI,CAACK,EAAE,EAAE,CAAC;EAChC,CAAC;EAED,oBACI3B,OAAA,CAAAE,SAAA;IAAA0B,QAAA,eACI5B,OAAA,CAACF,WAAW;MACR+B,SAAS,EAAEtB,aAAc;MACzBuB,YAAY,EAAET,gBAAiB;MAC/BZ,iBAAiB,EAAEA;IAAkB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC;EAAC,gBACJ,CAAC;AAEX;AAAC5B,EAAA,CAvCuBH,WAAW;EAAA,QAGdN,WAAW;AAAA;AAAAsC,EAAA,GAHRhC,WAAW;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}