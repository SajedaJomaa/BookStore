{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, NavLink, useRouteLoaderData } from 'react-router-dom';\nimport classes from './MainNavigation.module.css';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n  const token = useRouteLoaderData('root');\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const toggleMenu = () => {\n    setIsMenuOpen(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n// import React, { useState, useEffect } from 'react';\n// import { Form, NavLink, useRouteLoaderData } from 'react-router-dom';\n\n// import classes from './MainNavigation.module.css';\n\n// export default function Header() {\n//   const token = useRouteLoaderData('root');\n//   const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n//   const toggleMenu = () => {\n//     setIsMenuOpen((prevState) => !prevState);\n//   };\n\n//   // Handle window resize to keep the menu open on desktop\n//   useEffect(() => {\n//     const handleResize = () => {\n//       if (window.innerWidth >= 768) {\n//         setIsMenuOpen(true); // Menu should be open on desktop\n//       } else {\n//         setIsMenuOpen(false); // Menu should be closed on mobile\n//       }\n//     };\n\n//     window.addEventListener('resize', handleResize);\n//     return () => window.removeEventListener('resize', handleResize);\n//   }, []);\n\n//   return (\n//     <>\n//       <header className={isMenuOpen ? classes.active : ''}>\n//         <div>\n//           <button className={classes.menutoggle} onClick={toggleMenu}>\n//             <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"2.34rem\" height=\"2rem\" viewBox=\"0 0 28 24\">\n//               <path fill=\"#FFD700\" d=\"M2.61 0h22.431a2.61 2.61 0 1 1 0 5.22H2.61a2.61 2.61 0 1 1 0-5.22m0 9.39h22.431a2.61 2.61 0 1 1 0 5.22H2.61a2.61 2.61 0 1 1 0-5.22m0 9.391h22.431a2.61 2.61 0 1 1 0 5.22H2.61a2.61 2.61 0 1 1 0-5.22\" />\n//             </svg>\n//           </button>\n\n//           <nav className={`${classes.dropdownmenu} ${isMenuOpen ? classes.active : ''}`}>\n//             <ul>\n//               <li>\n//                 <NavLink className={classes.textLink} to=\"/\">Home</NavLink>\n//               </li>\n//               {!token && (\n//                 <li>\n//                   <NavLink to=\"/auth?mode=login\" className={classes.textLink}>Login</NavLink>\n//                 </li>\n//               )}\n//               {token && (\n//                 <li>\n//                   <NavLink to=\"/purchasedBooks\" className={classes.textLink}>Purchased</NavLink>\n//                 </li>\n//               )}\n//               {token && (\n//                 <li>\n//                   <Form action=\"/logout\" method=\"post\">\n//                     <button className={classes.textLink}>Logout</button>\n//                   </Form>\n//                 </li>\n//               )}\n//             </ul>\n//           </nav>\n//         </div>\n//       </header>\n//     </>\n//   );\n// }\n_s(Header, \"Z1iDcaAEkx8gMA30iVu/Kccj5Eo=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","Form","NavLink","useRouteLoaderData","classes","Fragment","_Fragment","jsxDEV","_jsxDEV","Header","_s","token","isMenuOpen","setIsMenuOpen","toggleMenu","prevState","_c","$RefreshReg$"],"sources":["C:/Users/Msys/OneDrive/Desktop/BookStore/frontend/src/components/MainNavigation.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, NavLink, useRouteLoaderData } from 'react-router-dom';\r\n\r\nimport classes from './MainNavigation.module.css';\r\n\r\nexport default function Header() {\r\n  const token = useRouteLoaderData('root');\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setIsMenuOpen((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n      {/* <header>\r\n        <div >\r\n          <button className={classes.menutoggle} onClick={toggleMenu}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"2.34rem\" height=\"2rem\" viewBox=\"0 0 28 24\"><path fill=\"#FFD700\" d=\"M2.61 0h22.431a2.61 2.61 0 1 1 0 5.22H2.61a2.61 2.61 0 1 1 0-5.22m0 9.39h22.431a2.61 2.61 0 1 1 0 5.22H2.61a2.61 2.61 0 1 1 0-5.22m0 9.391h22.431a2.61 2.61 0 1 1 0 5.22H2.61a2.61 2.61 0 1 1 0-5.22\" /></svg>\r\n          </button>\r\n\r\n          <nav className={`${classes.dropdownmenu} ${isMenuOpen ? classes.active : ''}`}>\r\n            <ul>\r\n              <li>\r\n                <NavLink className={classes.textLink} to=\"/\">Home</NavLink>\r\n              </li>\r\n              {!token && (\r\n                <li>\r\n                  <NavLink to=\"/auth?mode=login\" className={classes.textLink}>Login</NavLink>\r\n                </li>\r\n              )}\r\n              {token && (\r\n                <li>\r\n                  <NavLink to=\"/purchasedBooks\" className={classes.textLink}>Purchased</NavLink>\r\n                </li>\r\n              )}\r\n              {token && (\r\n                <li>\r\n                  <Form action=\"/logout\" method=\"post\">\r\n                    <button className={classes.textLink}>Logout</button>\r\n                  </Form>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </header> */}\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Form, NavLink, useRouteLoaderData } from 'react-router-dom';\r\n\r\n// import classes from './MainNavigation.module.css';\r\n\r\n// export default function Header() {\r\n//   const token = useRouteLoaderData('root');\r\n//   const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n//   const toggleMenu = () => {\r\n//     setIsMenuOpen((prevState) => !prevState);\r\n//   };\r\n\r\n//   // Handle window resize to keep the menu open on desktop\r\n//   useEffect(() => {\r\n//     const handleResize = () => {\r\n//       if (window.innerWidth >= 768) {\r\n//         setIsMenuOpen(true); // Menu should be open on desktop\r\n//       } else {\r\n//         setIsMenuOpen(false); // Menu should be closed on mobile\r\n//       }\r\n//     };\r\n\r\n//     window.addEventListener('resize', handleResize);\r\n//     return () => window.removeEventListener('resize', handleResize);\r\n//   }, []);\r\n\r\n//   return (\r\n//     <>\r\n//       <header className={isMenuOpen ? classes.active : ''}>\r\n//         <div>\r\n//           <button className={classes.menutoggle} onClick={toggleMenu}>\r\n//             <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"2.34rem\" height=\"2rem\" viewBox=\"0 0 28 24\">\r\n//               <path fill=\"#FFD700\" d=\"M2.61 0h22.431a2.61 2.61 0 1 1 0 5.22H2.61a2.61 2.61 0 1 1 0-5.22m0 9.39h22.431a2.61 2.61 0 1 1 0 5.22H2.61a2.61 2.61 0 1 1 0-5.22m0 9.391h22.431a2.61 2.61 0 1 1 0 5.22H2.61a2.61 2.61 0 1 1 0-5.22\" />\r\n//             </svg>\r\n//           </button>\r\n\r\n//           <nav className={`${classes.dropdownmenu} ${isMenuOpen ? classes.active : ''}`}>\r\n//             <ul>\r\n//               <li>\r\n//                 <NavLink className={classes.textLink} to=\"/\">Home</NavLink>\r\n//               </li>\r\n//               {!token && (\r\n//                 <li>\r\n//                   <NavLink to=\"/auth?mode=login\" className={classes.textLink}>Login</NavLink>\r\n//                 </li>\r\n//               )}\r\n//               {token && (\r\n//                 <li>\r\n//                   <NavLink to=\"/purchasedBooks\" className={classes.textLink}>Purchased</NavLink>\r\n//                 </li>\r\n//               )}\r\n//               {token && (\r\n//                 <li>\r\n//                   <Form action=\"/logout\" method=\"post\">\r\n//                     <button className={classes.textLink}>Logout</button>\r\n//                   </Form>\r\n//                 </li>\r\n//               )}\r\n//             </ul>\r\n//           </nav>\r\n//         </div>\r\n//       </header>\r\n//     </>\r\n//   );\r\n// }\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,OAAO,EAAEC,kBAAkB,QAAQ,kBAAkB;AAEpE,OAAOC,OAAO,MAAM,6BAA6B;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAMC,KAAK,GAAGR,kBAAkB,CAAC,MAAM,CAAC;EACxC,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMc,UAAU,GAAGA,CAAA,KAAM;IACvBD,aAAa,CAAEE,SAAS,IAAK,CAACA,SAAS,CAAC;EAC1C,CAAC;EAED,oBACEP,OAAA,CAAAF,SAAA,mBAoCE,CAAC;AAEP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAI,EAAA,CAjHwBD,MAAM;EAAA,QACdN,kBAAkB;AAAA;AAAAa,EAAA,GADVP,MAAM;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}