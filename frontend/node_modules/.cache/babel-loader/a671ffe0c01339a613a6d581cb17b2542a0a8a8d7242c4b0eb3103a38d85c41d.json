{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Msys\\\\OneDrive\\\\Desktop\\\\BookStore - Copy\\\\frontend\\\\src\\\\components\\\\ShowResults.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// export default function ShowResults({ booksData }) {\n//     const navigate = useNavigate();\n\n//     const handleSelectBook = (id) => {\n//         navigate(`/book/${id}`);\n//     };\n\n//     return (\n//         <section className=\"books-category\">\n//             {booksData && booksData.length > 0 ? (\n//                 <ul className=\"books\">\n//                     {booksData.map((book) => (\n//                         <li key={book.id} className=\"book-item\">\n//                             {book.volumeInfo.imageLinks && book.volumeInfo.imageLinks.thumbnail ? (\n//                                 <button onClick={() => handleSelectBook(book.id)}>\n//                                     <img\n//                                         src={book.volumeInfo.imageLinks.thumbnail}\n//                                         alt={book.volumeInfo.title}\n//                                     />\n//                                     <p className='bookName'>{book.volumeInfo.title}</p>\n//                                 </button>\n\n//                             ) : (\n//                                 <p>No image available</p>\n//                             )}\n//                             {/* <p>{book.volumeInfo.title}</p> */}\n//                         </li>\n//                     ))}\n//                 </ul>\n//             ) : (\n//                 <p>No results found.</p>\n//             )}\n//         </section>\n//     );\n// }\n\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport classes from './ShowAvailableBooks.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowResults({\n  booksData\n}) {\n  _s();\n  const navigate = useNavigate();\n  const handleSelectBook = id => {\n    navigate(`/book/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.bookscategory,\n    children: booksData && booksData.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.books,\n      children: booksData.map((book, index) => {\n        const title = book.title || 'No Title';\n        if (title === 'No Title') {\n          return null;\n        }\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: classes.bookitem,\n          children: book.imageLinks && book.imageLinks.thumbnail ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSelectBook(book.id),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: book.imageLinks.thumbnail,\n              alt: `Book ${index + 1}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: classes.booktitle,\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No image available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 37\n          }, this)\n        }, `${book.id}-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(ShowResults, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = ShowResults;\nvar _c;\n$RefreshReg$(_c, \"ShowResults\");","map":{"version":3,"names":["React","useNavigate","classes","jsxDEV","_jsxDEV","ShowResults","booksData","_s","navigate","handleSelectBook","id","className","bookscategory","children","length","books","map","book","index","title","bookitem","imageLinks","thumbnail","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","booktitle","_c","$RefreshReg$"],"sources":["C:/Users/Msys/OneDrive/Desktop/BookStore - Copy/frontend/src/components/ShowResults.js"],"sourcesContent":["// import React from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// export default function ShowResults({ booksData }) {\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleSelectBook = (id) => {\r\n//         navigate(`/book/${id}`);\r\n//     };\r\n\r\n//     return (\r\n//         <section className=\"books-category\">\r\n//             {booksData && booksData.length > 0 ? (\r\n//                 <ul className=\"books\">\r\n//                     {booksData.map((book) => (\r\n//                         <li key={book.id} className=\"book-item\">\r\n//                             {book.volumeInfo.imageLinks && book.volumeInfo.imageLinks.thumbnail ? (\r\n//                                 <button onClick={() => handleSelectBook(book.id)}>\r\n//                                     <img\r\n//                                         src={book.volumeInfo.imageLinks.thumbnail}\r\n//                                         alt={book.volumeInfo.title}\r\n//                                     />\r\n//                                     <p className='bookName'>{book.volumeInfo.title}</p>\r\n//                                 </button>\r\n\r\n//                             ) : (\r\n//                                 <p>No image available</p>\r\n//                             )}\r\n//                             {/* <p>{book.volumeInfo.title}</p> */}\r\n//                         </li>\r\n//                     ))}\r\n//                 </ul>\r\n//             ) : (\r\n//                 <p>No results found.</p>\r\n//             )}\r\n//         </section>\r\n//     );\r\n// }\r\n\r\n\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport classes from './ShowAvailableBooks.module.css';\r\n\r\nexport default function ShowResults({ booksData }) {\r\n    const navigate = useNavigate();\r\n\r\n    const handleSelectBook = (id) => {\r\n        navigate(`/book/${id}`);\r\n    };\r\n\r\n    return (\r\n        <section className={classes.bookscategory}>\r\n            {booksData && booksData.length > 0 ? (\r\n                <ul className={classes.books}>\r\n                    {booksData.map((book, index) => {\r\n                        const title = book.title || 'No Title';\r\n                        if (title === 'No Title') {\r\n                            return null;\r\n                        }\r\n\r\n                        return (\r\n                            <li key={`${book.id}-${index}`} className={classes.bookitem}>\r\n                                {book.imageLinks && book.imageLinks.thumbnail ? (\r\n                                    <button onClick={() => handleSelectBook(book.id)}>\r\n                                        <img\r\n                                            src={book.imageLinks.thumbnail}\r\n                                            alt={`Book ${index + 1}`}\r\n\r\n                                        />\r\n                                        <p className={classes.booktitle}>{title}</p>\r\n\r\n\r\n                                    </button>\r\n                                ) : (\r\n                                    <p>No image available</p>\r\n                                )}\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            ) : (\r\n                <p>Loading...</p>\r\n            )}\r\n        </section>\r\n    );\r\n}\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,eAAe,SAASC,WAAWA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC/C,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,gBAAgB,GAAIC,EAAE,IAAK;IAC7BF,QAAQ,CAAC,SAASE,EAAE,EAAE,CAAC;EAC3B,CAAC;EAED,oBACIN,OAAA;IAASO,SAAS,EAAET,OAAO,CAACU,aAAc;IAAAC,QAAA,EACrCP,SAAS,IAAIA,SAAS,CAACQ,MAAM,GAAG,CAAC,gBAC9BV,OAAA;MAAIO,SAAS,EAAET,OAAO,CAACa,KAAM;MAAAF,QAAA,EACxBP,SAAS,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAC5B,MAAMC,KAAK,GAAGF,IAAI,CAACE,KAAK,IAAI,UAAU;QACtC,IAAIA,KAAK,KAAK,UAAU,EAAE;UACtB,OAAO,IAAI;QACf;QAEA,oBACIf,OAAA;UAAgCO,SAAS,EAAET,OAAO,CAACkB,QAAS;UAAAP,QAAA,EACvDI,IAAI,CAACI,UAAU,IAAIJ,IAAI,CAACI,UAAU,CAACC,SAAS,gBACzClB,OAAA;YAAQmB,OAAO,EAAEA,CAAA,KAAMd,gBAAgB,CAACQ,IAAI,CAACP,EAAE,CAAE;YAAAG,QAAA,gBAC7CT,OAAA;cACIoB,GAAG,EAAEP,IAAI,CAACI,UAAU,CAACC,SAAU;cAC/BG,GAAG,EAAE,QAAQP,KAAK,GAAG,CAAC;YAAG;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAE5B,CAAC,eACFzB,OAAA;cAAGO,SAAS,EAAET,OAAO,CAAC4B,SAAU;cAAAjB,QAAA,EAAEM;YAAK;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGxC,CAAC,gBAETzB,OAAA;YAAAS,QAAA,EAAG;UAAkB;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAC3B,GAdI,GAAGZ,IAAI,CAACP,EAAE,IAAIQ,KAAK,EAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAe1B,CAAC;MAEb,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,gBAELzB,OAAA;MAAAS,QAAA,EAAG;IAAU;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACnB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAElB;AAACtB,EAAA,CA1CuBF,WAAW;EAAA,QACdJ,WAAW;AAAA;AAAA8B,EAAA,GADR1B,WAAW;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}