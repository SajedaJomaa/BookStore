{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Msys\\\\OneDrive\\\\Desktop\\\\BookStore\\\\frontend\\\\src\\\\components\\\\ShowAvailableBooks.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\n\n// import Spinner from './Spinner.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowAvailableBooks({\n  booksData,\n  lastImageRef,\n  isLoading\n}) {\n  _s();\n  const navigate = useNavigate();\n  function handleSelectBook(id) {\n    navigate(`/book/${id}`);\n  }\n  return (\n    /*#__PURE__*/\n    // <section className=\"books-category\">\n    //     {booksData && booksData.length > 0 ? (\n    //         <ul className=\"books\">\n    //             {booksData.map((book, index) => {\n    //                 const title = book.title || 'No Title';\n    //                 if (title === 'No Title') {\n    //                     return null;\n    //                 }\n    //                 return (\n    //                     <li key={`${book.id}-${index}`} className=\"book-item\">\n    //                         {book.imageLinks && book.imageLinks.thumbnail ? (\n    //                             <button onClick={() => handleSelectBook(book.id)}>\n    //                                 <img\n    //                                     src={book.imageLinks.thumbnail}\n    //                                     alt={`Book ${index + 1}`}\n    //                                     ref={index === booksData.length - 1 ? lastImageRef : null}\n    //                                 />\n    //                                 <p className=\"book-title\">{title}</p>\n    //                             </button>\n    //                         ) : (\n    //                             <p>No image available</p>\n    //                         )}\n    //                     </li>\n    //                 );\n    //             })}\n    //         </ul>\n    //     ) : (\n    //         <p>Loading...</p>\n    //     )}\n    // </section>\n    // <section className=\"books-category\">\n    //     {isLoading ? (\n    //         <div className=\"spinner\">\n    //             <div className=\"double-bounce1\"></div>\n    //             <div className=\"double-bounce2\"></div>\n    //         </div>\n    //     ) : booksData && booksData.length > 0 ? (\n    //         <ul className=\"books\">\n    //             {booksData.map((book, index) => {\n    //                 const title = book.title || 'No Title';\n    //                 if (title === 'No Title') {\n    //                     return null;\n    //                 }\n    //                 return (\n    //                     <li key={`${book.id}-${index}`} className=\"book-item\">\n    //                         {book.imageLinks && book.imageLinks.thumbnail ? (\n    //                             <button onClick={() => handleSelectBook(book.id)}>\n    //                                 <img\n    //                                     src={book.imageLinks.thumbnail}\n    //                                     alt={`Book ${index + 1}`}\n    //                                     ref={index === booksData.length - 1 ? lastImageRef : null}\n    //                                 />\n    //                                 <p className=\"book-title\">{title}</p>\n    //                             </button>\n    //                         ) : (\n    //                             <p>No image available</p>\n    //                         )}\n    //                     </li>\n    //                 );\n    //             })}\n    //         </ul>\n    //     ) : (\n    //         <p>No books available.</p>\n    //     )}\n    // </section>\n    _jsxDEV(\"section\", {\n      className: \"books-category\",\n      style: {\n        position: 'relative',\n        minHeight: '200px'\n      },\n      children: [\" \", isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"double-bounce1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"double-bounce2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this) : booksData && booksData.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"books\",\n        children: booksData.map((book, index) => {\n          const title = book.title || 'No Title';\n          if (title === 'No Title') {\n            return null;\n          }\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"book-item\",\n            children: book.imageLinks && book.imageLinks.thumbnail ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSelectBook(book.id),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: book.imageLinks.thumbnail,\n                alt: `Book ${index + 1}`,\n                ref: index === booksData.length - 1 ? lastImageRef : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"book-title\",\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No image available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 37\n            }, this)\n          }, `${book.id}-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No books available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(ShowAvailableBooks, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = ShowAvailableBooks;\nvar _c;\n$RefreshReg$(_c, \"ShowAvailableBooks\");","map":{"version":3,"names":["useNavigate","jsxDEV","_jsxDEV","ShowAvailableBooks","booksData","lastImageRef","isLoading","_s","navigate","handleSelectBook","id","className","style","position","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","book","index","title","imageLinks","thumbnail","onClick","src","alt","ref","_c","$RefreshReg$"],"sources":["C:/Users/Msys/OneDrive/Desktop/BookStore/frontend/src/components/ShowAvailableBooks.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\r\n\r\n// import Spinner from './Spinner.js';\r\nexport default function ShowAvailableBooks({ booksData, lastImageRef, isLoading }) {\r\n    const navigate = useNavigate();\r\n\r\n    function handleSelectBook(id) {\r\n        navigate(`/book/${id}`);\r\n    }\r\n\r\n    return (\r\n        // <section className=\"books-category\">\r\n        //     {booksData && booksData.length > 0 ? (\r\n        //         <ul className=\"books\">\r\n        //             {booksData.map((book, index) => {\r\n        //                 const title = book.title || 'No Title';\r\n        //                 if (title === 'No Title') {\r\n        //                     return null;\r\n        //                 }\r\n\r\n        //                 return (\r\n        //                     <li key={`${book.id}-${index}`} className=\"book-item\">\r\n        //                         {book.imageLinks && book.imageLinks.thumbnail ? (\r\n        //                             <button onClick={() => handleSelectBook(book.id)}>\r\n        //                                 <img\r\n        //                                     src={book.imageLinks.thumbnail}\r\n        //                                     alt={`Book ${index + 1}`}\r\n        //                                     ref={index === booksData.length - 1 ? lastImageRef : null}\r\n        //                                 />\r\n        //                                 <p className=\"book-title\">{title}</p>\r\n        //                             </button>\r\n        //                         ) : (\r\n        //                             <p>No image available</p>\r\n        //                         )}\r\n        //                     </li>\r\n        //                 );\r\n        //             })}\r\n        //         </ul>\r\n        //     ) : (\r\n        //         <p>Loading...</p>\r\n        //     )}\r\n        // </section>\r\n        // <section className=\"books-category\">\r\n        //     {isLoading ? (\r\n        //         <div className=\"spinner\">\r\n        //             <div className=\"double-bounce1\"></div>\r\n        //             <div className=\"double-bounce2\"></div>\r\n        //         </div>\r\n        //     ) : booksData && booksData.length > 0 ? (\r\n        //         <ul className=\"books\">\r\n        //             {booksData.map((book, index) => {\r\n        //                 const title = book.title || 'No Title';\r\n        //                 if (title === 'No Title') {\r\n        //                     return null;\r\n        //                 }\r\n\r\n        //                 return (\r\n        //                     <li key={`${book.id}-${index}`} className=\"book-item\">\r\n        //                         {book.imageLinks && book.imageLinks.thumbnail ? (\r\n        //                             <button onClick={() => handleSelectBook(book.id)}>\r\n        //                                 <img\r\n        //                                     src={book.imageLinks.thumbnail}\r\n        //                                     alt={`Book ${index + 1}`}\r\n        //                                     ref={index === booksData.length - 1 ? lastImageRef : null}\r\n        //                                 />\r\n        //                                 <p className=\"book-title\">{title}</p>\r\n        //                             </button>\r\n        //                         ) : (\r\n        //                             <p>No image available</p>\r\n        //                         )}\r\n        //                     </li>\r\n        //                 );\r\n        //             })}\r\n        //         </ul>\r\n        //     ) : (\r\n        //         <p>No books available.</p>\r\n        //     )}\r\n        // </section>\r\n        <section className=\"books-category\" style={{ position: 'relative', minHeight: '200px' }}> {/* Set relative position and min height */}\r\n            {isLoading ? (\r\n                <div className=\"spinner\">\r\n                    <div className=\"double-bounce1\"></div>\r\n                    <div className=\"double-bounce2\"></div>\r\n                </div>\r\n            ) : booksData && booksData.length > 0 ? (\r\n                <ul className=\"books\">\r\n                    {booksData.map((book, index) => {\r\n                        const title = book.title || 'No Title';\r\n                        if (title === 'No Title') {\r\n                            return null;\r\n                        }\r\n\r\n                        return (\r\n                            <li key={`${book.id}-${index}`} className=\"book-item\">\r\n                                {book.imageLinks && book.imageLinks.thumbnail ? (\r\n                                    <button onClick={() => handleSelectBook(book.id)}>\r\n                                        <img\r\n                                            src={book.imageLinks.thumbnail}\r\n                                            alt={`Book ${index + 1}`}\r\n                                            ref={index === booksData.length - 1 ? lastImageRef : null}\r\n                                        />\r\n                                        <p className=\"book-title\">{title}</p>\r\n                                    </button>\r\n                                ) : (\r\n                                    <p>No image available</p>\r\n                                )}\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            ) : (\r\n                <p>No books available.</p>\r\n            )}\r\n        </section>\r\n\r\n\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}