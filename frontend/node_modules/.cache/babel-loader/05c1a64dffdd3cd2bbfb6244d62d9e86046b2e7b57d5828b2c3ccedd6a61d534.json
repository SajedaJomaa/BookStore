{"ast":null,"code":"export async function fetchAvailableBooks() {\n  const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=search+terms`);\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(`Failed to fetch book data: ${errorData.error.message}`);\n  }\n  const resData = await response.json();\n  console.log(resData);\n  return resData;\n}\n\n// export const fetchSelectedBook = async (id) => {\n//     try {\n//         const response = await fetch(`https://www.googleapis.com/books/v1/volumes/${id}`);\n//         if (!response.ok) {\n//             throw new Error('Network response was not ok');\n//         }\n//         const data = await response.json();\n//         return data;\n//     } catch (error) {\n//         console.error('Error fetching the selected book:', error);\n//         throw error;\n//     }\n// };\n\nexport const fetchBooksByQuery = async query => {\n  const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n  const data = await response.json();\n  return data.items.map(item => ({\n    id: item.id,\n    title: item.volumeInfo.title,\n    author: item.volumeInfo.authors ? item.volumeInfo.authors.join(', ') : 'Unknown',\n    volumeInfo: item.volumeInfo\n  }));\n};\nexport const fetchSelectedBookByTitle = async title => {\n  const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=intitle:${title}`);\n  const data = await response.json();\n  return data.items[0];\n};\nexport const fetchSelectedBook = async id => {\n  const response = await fetch(`http://localhost:8080/events/${id}`);\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return response.json();\n};","map":{"version":3,"names":["fetchAvailableBooks","response","fetch","ok","errorData","json","Error","error","message","resData","console","log","fetchBooksByQuery","query","data","items","map","item","id","title","volumeInfo","author","authors","join","fetchSelectedBookByTitle","fetchSelectedBook"],"sources":["C:/Users/Msys/OneDrive/Desktop/tryAgain/frontend/src/services/api-call.js"],"sourcesContent":["\r\nexport async function fetchAvailableBooks() {\r\n    const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=search+terms`);\r\n    if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(`Failed to fetch book data: ${errorData.error.message}`);\r\n    }\r\n    const resData = await response.json();\r\n    console.log(resData);\r\n    return resData;\r\n}\r\n\r\n\r\n// export const fetchSelectedBook = async (id) => {\r\n//     try {\r\n//         const response = await fetch(`https://www.googleapis.com/books/v1/volumes/${id}`);\r\n//         if (!response.ok) {\r\n//             throw new Error('Network response was not ok');\r\n//         }\r\n//         const data = await response.json();\r\n//         return data;\r\n//     } catch (error) {\r\n//         console.error('Error fetching the selected book:', error);\r\n//         throw error;\r\n//     }\r\n// };\r\n\r\n\r\nexport const fetchBooksByQuery = async (query) => {\r\n    const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\r\n    const data = await response.json();\r\n    return data.items.map(item => ({\r\n        id: item.id,\r\n        title: item.volumeInfo.title,\r\n        author: item.volumeInfo.authors ? item.volumeInfo.authors.join(', ') : 'Unknown',\r\n        volumeInfo: item.volumeInfo,\r\n    }));\r\n};\r\n\r\nexport const fetchSelectedBookByTitle = async (title) => {\r\n    const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=intitle:${title}`);\r\n    const data = await response.json();\r\n    return data.items[0];\r\n};\r\n\r\n\r\nexport const fetchSelectedBook = async (id) => {\r\n    const response = await fetch(`http://localhost:8080/events/${id}`);\r\n    if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n    }\r\n    return response.json();\r\n};"],"mappings":"AACA,OAAO,eAAeA,mBAAmBA,CAAA,EAAG;EACxC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4DAA4D,CAAC;EAC1F,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACvC,MAAM,IAAIC,KAAK,CAAC,8BAA8BF,SAAS,CAACG,KAAK,CAACC,OAAO,EAAE,CAAC;EAC5E;EACA,MAAMC,OAAO,GAAG,MAAMR,QAAQ,CAACI,IAAI,CAAC,CAAC;EACrCK,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACpB,OAAOA,OAAO;AAClB;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,MAAMG,iBAAiB,GAAG,MAAOC,KAAK,IAAK;EAC9C,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,iDAAiDW,KAAK,EAAE,CAAC;EACtF,MAAMC,IAAI,GAAG,MAAMb,QAAQ,CAACI,IAAI,CAAC,CAAC;EAClC,OAAOS,IAAI,CAACC,KAAK,CAACC,GAAG,CAACC,IAAI,KAAK;IAC3BC,EAAE,EAAED,IAAI,CAACC,EAAE;IACXC,KAAK,EAAEF,IAAI,CAACG,UAAU,CAACD,KAAK;IAC5BE,MAAM,EAAEJ,IAAI,CAACG,UAAU,CAACE,OAAO,GAAGL,IAAI,CAACG,UAAU,CAACE,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC,GAAG,SAAS;IAChFH,UAAU,EAAEH,IAAI,CAACG;EACrB,CAAC,CAAC,CAAC;AACP,CAAC;AAED,OAAO,MAAMI,wBAAwB,GAAG,MAAOL,KAAK,IAAK;EACrD,MAAMlB,QAAQ,GAAG,MAAMC,KAAK,CAAC,yDAAyDiB,KAAK,EAAE,CAAC;EAC9F,MAAML,IAAI,GAAG,MAAMb,QAAQ,CAACI,IAAI,CAAC,CAAC;EAClC,OAAOS,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;AACxB,CAAC;AAGD,OAAO,MAAMU,iBAAiB,GAAG,MAAOP,EAAE,IAAK;EAC3C,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgCgB,EAAE,EAAE,CAAC;EAClE,IAAI,CAACjB,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIG,KAAK,CAAC,6BAA6B,CAAC;EAClD;EACA,OAAOL,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}