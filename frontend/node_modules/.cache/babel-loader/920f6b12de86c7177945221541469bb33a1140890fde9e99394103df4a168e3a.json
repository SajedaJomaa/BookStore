{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Msys\\\\OneDrive\\\\Desktop\\\\tryAgain - Copy\\\\frontend\\\\src\\\\pages\\\\SignupAuth.js\";\nimport { json, redirect } from 'react-router-dom';\nimport Signup from '../components/Signup.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignupAuthPage() {\n  return /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n}\n_c = SignupAuthPage;\nexport async function action({\n  request\n}) {\n  // const searchParams = new URL(request.url).searchParams;\n  // const mode = searchParams.get('mode') || 'signup';\n\n  // if (mode !== 'login' && mode !== 'signup') {\n  //     throw json({ message: 'Unsupported mode.' }, { status: 422 });\n  // }\n\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password'),\n    confirm: data.get('confirm-password'),\n    firstName: data.get('first-name'),\n    lastName: data.get('last-name'),\n    role: data.get('role'),\n    acquisition: data.get('acquisition')\n  };\n  const response = await fetch('http://localhost:8080/' + mode, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Could not authenticate user.'\n    }, {\n      status: 500\n    });\n  }\n  const resData = await response.json();\n  const token = resData.token;\n  localStorage.setItem('token', token);\n  const expiration = new Date();\n  expiration.setHours(expiration.getHours() + 1);\n  localStorage.setItem('expiration', expiration.toISOString());\n  return redirect('/');\n}\nvar _c;\n$RefreshReg$(_c, \"SignupAuthPage\");","map":{"version":3,"names":["json","redirect","Signup","jsxDEV","_jsxDEV","SignupAuthPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","data","formData","authData","email","get","password","confirm","firstName","lastName","role","acquisition","response","fetch","mode","method","headers","body","JSON","stringify","status","ok","message","resData","token","localStorage","setItem","expiration","Date","setHours","getHours","toISOString","$RefreshReg$"],"sources":["C:/Users/Msys/OneDrive/Desktop/tryAgain - Copy/frontend/src/pages/SignupAuth.js"],"sourcesContent":["import { json, redirect } from 'react-router-dom';\r\n\r\nimport Signup from '../components/Signup.js';\r\n\r\nexport default function SignupAuthPage() {\r\n    return <Signup />;\r\n}\r\n\r\n\r\n\r\nexport async function action({ request }) {\r\n    // const searchParams = new URL(request.url).searchParams;\r\n    // const mode = searchParams.get('mode') || 'signup';\r\n\r\n    // if (mode !== 'login' && mode !== 'signup') {\r\n    //     throw json({ message: 'Unsupported mode.' }, { status: 422 });\r\n    // }\r\n\r\n    const data = await request.formData();\r\n    const authData = {\r\n        email: data.get('email'),\r\n        password: data.get('password'),\r\n        confirm: data.get('confirm-password'),\r\n        firstName: data.get('first-name'),\r\n        lastName: data.get('last-name'),\r\n        role: data.get('role'),\r\n        acquisition: data.get('acquisition'),\r\n    };\r\n\r\n    const response = await fetch('http://localhost:8080/' + mode, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(authData),\r\n    });\r\n\r\n    if (response.status === 422 || response.status === 401) {\r\n        return response;\r\n    }\r\n\r\n    if (!response.ok) {\r\n        throw json({ message: 'Could not authenticate user.' }, { status: 500 });\r\n    }\r\n\r\n    const resData = await response.json();\r\n    const token = resData.token;\r\n\r\n    localStorage.setItem('token', token);\r\n    const expiration = new Date();\r\n    expiration.setHours(expiration.getHours() + 1);\r\n    localStorage.setItem('expiration', expiration.toISOString());\r\n\r\n    return redirect('/');\r\n}"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAEjD,OAAOC,MAAM,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,cAAcA,CAAA,EAAG;EACrC,oBAAOD,OAAA,CAACF,MAAM;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFuBL,cAAc;AAMtC,OAAO,eAAeM,MAAMA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EACtC;EACA;;EAEA;EACA;EACA;;EAEA,MAAMC,IAAI,GAAG,MAAMD,OAAO,CAACE,QAAQ,CAAC,CAAC;EACrC,MAAMC,QAAQ,GAAG;IACbC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,QAAQ,EAAEL,IAAI,CAACI,GAAG,CAAC,UAAU,CAAC;IAC9BE,OAAO,EAAEN,IAAI,CAACI,GAAG,CAAC,kBAAkB,CAAC;IACrCG,SAAS,EAAEP,IAAI,CAACI,GAAG,CAAC,YAAY,CAAC;IACjCI,QAAQ,EAAER,IAAI,CAACI,GAAG,CAAC,WAAW,CAAC;IAC/BK,IAAI,EAAET,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBM,WAAW,EAAEV,IAAI,CAACI,GAAG,CAAC,aAAa;EACvC,CAAC;EAED,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,GAAGC,IAAI,EAAE;IAC1DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAChB,QAAQ;EACjC,CAAC,CAAC;EAEF,IAAIS,QAAQ,CAACQ,MAAM,KAAK,GAAG,IAAIR,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;IACpD,OAAOR,QAAQ;EACnB;EAEA,IAAI,CAACA,QAAQ,CAACS,EAAE,EAAE;IACd,MAAMjC,IAAI,CAAC;MAAEkC,OAAO,EAAE;IAA+B,CAAC,EAAE;MAAEF,MAAM,EAAE;IAAI,CAAC,CAAC;EAC5E;EAEA,MAAMG,OAAO,GAAG,MAAMX,QAAQ,CAACxB,IAAI,CAAC,CAAC;EACrC,MAAMoC,KAAK,GAAGD,OAAO,CAACC,KAAK;EAE3BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;EACpC,MAAMG,UAAU,GAAG,IAAIC,IAAI,CAAC,CAAC;EAC7BD,UAAU,CAACE,QAAQ,CAACF,UAAU,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC9CL,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,UAAU,CAACI,WAAW,CAAC,CAAC,CAAC;EAE5D,OAAO1C,QAAQ,CAAC,GAAG,CAAC;AACxB;AAAC,IAAAS,EAAA;AAAAkC,YAAA,CAAAlC,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}