{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Msys\\\\OneDrive\\\\Desktop\\\\tryAgain - Copy\\\\frontend\\\\src\\\\pages\\\\SignupAuth.js\";\nimport { json, redirect } from 'react-router-dom';\nimport Signup from '../components/Signup.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignupAuthPage() {\n  return /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n}\n\n// export async function action({ request }) {\n//     // const searchParams = new URL(request.url).searchParams;\n//     const mode = 'signup';\n\n//     // if (mode !== 'login' && mode !== 'signup') {\n//     //     throw json({ message: 'Unsupported mode.' }, { status: 422 });\n//     // }\n\n//     const data = await request.formData();\n//     // const authData = {\n//     //     email: data.get('email'),\n//     //     password: data.get('password'),\n//     //     confirm: data.get('confirm-password'),\n//     //     firstName: data.get('first-name'),\n//     //     lastName: data.get('last-name'),\n//     //     role: data.get('role'),\n//     //     acquisition: data.get('acquisition'),\n//     // };\n//     const authData = Object.fromEntries(data.entries());\n\n//     const response = await fetch('http://localhost:8080/' + mode, {\n//         method: 'POST',\n//         headers: {\n//             'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(authData),\n//     });\n\n//     if (response.status === 422 || response.status === 401) {\n//         return response;\n//     }\n\n//     if (!response.ok) {\n//         throw json({ message: 'Could not authenticate user.' }, { status: 500 });\n//     }\n\n//     const resData = await response.json();\n//     const token = resData.token;\n\n//     localStorage.setItem('token', token);\n//     const expiration = new Date();\n//     expiration.setHours(expiration.getHours() + 1);\n//     localStorage.setItem('expiration', expiration.toISOString());\n\n//     return redirect('/');\n// }\n_c = SignupAuthPage;\nvar _c;\n$RefreshReg$(_c, \"SignupAuthPage\");","map":{"version":3,"names":["json","redirect","Signup","jsxDEV","_jsxDEV","SignupAuthPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Msys/OneDrive/Desktop/tryAgain - Copy/frontend/src/pages/SignupAuth.js"],"sourcesContent":["import { json, redirect } from 'react-router-dom';\r\n\r\nimport Signup from '../components/Signup.js';\r\n\r\nexport default function SignupAuthPage() {\r\n    return <Signup />;\r\n}\r\n\r\n\r\n\r\n// export async function action({ request }) {\r\n//     // const searchParams = new URL(request.url).searchParams;\r\n//     const mode = 'signup';\r\n\r\n//     // if (mode !== 'login' && mode !== 'signup') {\r\n//     //     throw json({ message: 'Unsupported mode.' }, { status: 422 });\r\n//     // }\r\n\r\n//     const data = await request.formData();\r\n//     // const authData = {\r\n//     //     email: data.get('email'),\r\n//     //     password: data.get('password'),\r\n//     //     confirm: data.get('confirm-password'),\r\n//     //     firstName: data.get('first-name'),\r\n//     //     lastName: data.get('last-name'),\r\n//     //     role: data.get('role'),\r\n//     //     acquisition: data.get('acquisition'),\r\n//     // };\r\n//     const authData = Object.fromEntries(data.entries());\r\n\r\n//     const response = await fetch('http://localhost:8080/' + mode, {\r\n//         method: 'POST',\r\n//         headers: {\r\n//             'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(authData),\r\n//     });\r\n\r\n//     if (response.status === 422 || response.status === 401) {\r\n//         return response;\r\n//     }\r\n\r\n//     if (!response.ok) {\r\n//         throw json({ message: 'Could not authenticate user.' }, { status: 500 });\r\n//     }\r\n\r\n//     const resData = await response.json();\r\n//     const token = resData.token;\r\n\r\n//     localStorage.setItem('token', token);\r\n//     const expiration = new Date();\r\n//     expiration.setHours(expiration.getHours() + 1);\r\n//     localStorage.setItem('expiration', expiration.toISOString());\r\n\r\n//     return redirect('/');\r\n// }"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAEjD,OAAOC,MAAM,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,cAAcA,CAAA,EAAG;EACrC,oBAAOD,OAAA,CAACF,MAAM;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAAAC,EAAA,GAnDwBL,cAAc;AAAA,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}