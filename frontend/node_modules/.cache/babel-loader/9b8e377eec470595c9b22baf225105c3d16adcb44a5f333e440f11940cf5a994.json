{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Msys\\\\OneDrive\\\\Desktop\\\\BookStore\\\\frontend\\\\src\\\\components\\\\ShowAvailableBooks.js\",\n  _s = $RefreshSig$();\n// import { useNavigate } from 'react-router-dom';\n// import SearchLogic from './SearchLogic.js';\n// import classes from './ShowAvailableBooks.module.css';\n// export default function ShowAvailableBooks({ booksData, lastImageRef, isLoading }) {\n//     const navigate = useNavigate();\n\n//     function handleSelectBook(id) {\n//         navigate(`/book/${id}`);\n//     }\n\n//     return (\n//         <>\n//             <div className={classes.container}>\n//                 <h1 className={classes.siteNameFetch}>Design Books</h1>\n//                 <div >\n//                     <SearchLogic />\n//                 </div>\n//             </div>\n//             <section className={classes.bookscategory}>\n//                 {booksData && booksData.length > 0 ? (\n//                     <ul className={classes.books}>\n//                         {booksData.map((book, index) => {\n//                             const title = book.title || 'No Title';\n//                             if (title === 'No Title') {\n//                                 return null;\n//                             }\n\n//                             return (\n//                                 <li key={`${book.id}-${index}`} className={classes.bookitem}>\n//                                     {book.imageLinks && book.imageLinks.thumbnail ? (\n//                                         <button onClick={() => handleSelectBook(book.id)}>\n//                                             {isLoading ? (\n//                                                 <div className={classes.skeletoncard}>\n//                                                     <div className={classes.skeletonimage}></div>\n//                                                     <div className={classes.skeletontitle}></div>\n//                                                 </div>\n//                                             ) : (\n//                                                 <>\n//                                                     <img\n//                                                         src={book.imageLinks.thumbnail}\n//                                                         alt={`Book ${index + 1}`}\n//                                                         ref={index === booksData.length - 1 ? lastImageRef : null}\n//                                                     />\n//                                                     <p className={classes.booktitle}>{title}</p>\n//                                                 </>\n//                                             )}\n//                                         </button>\n//                                     ) : (\n//                                         <p>No image available</p>\n//                                     )}\n//                                 </li>\n//                             );\n//                         })}\n//                     </ul>\n//                 ) : (\n//                     <p>Loading...</p>\n//                 )}\n//             </section>\n//         </>\n\n//     );\n// }\n\nimport { useNavigate } from 'react-router-dom';\nimport SearchLogic from './SearchLogic.js';\nimport classes from './ShowAvailableBooks.module.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ShowAvailableBooks({\n  booksData,\n  lastImageRef,\n  isLoading\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [searchResults, setSearchResults] = useState([]);\n  function handleSelectBook(id) {\n    navigate(`/book/${id}`);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: classes.siteNameFetch,\n        children: \"Design Books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(SearchLogic, {\n          onResultsChange: setSearchResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.bookscategory,\n      children: searchResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: classes.books,\n        children: searchResults.map((book, index) => {\n          const title = book.volumeInfo.title || 'No Title';\n          if (title === 'No Title') {\n            return null;\n          }\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: classes.bookitem,\n            children: book.volumeInfo.imageLinks && book.volumeInfo.imageLinks.thumbnail ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSelectBook(book.id),\n              children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.skeletoncard,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.skeletonimage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.skeletontitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 49\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: book.volumeInfo.imageLinks.thumbnail,\n                  alt: `Book ${index + 1}`,\n                  ref: index === searchResults.length - 1 ? lastImageRef : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: classes.booktitle,\n                  children: title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No image available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 41\n            }, this)\n          }, `${book.id}-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ShowAvailableBooks, \"VXKz3mhaFLuACgbqF14KL3PUoKQ=\", false, function () {\n  return [useNavigate];\n});\n_c = ShowAvailableBooks;\nvar _c;\n$RefreshReg$(_c, \"ShowAvailableBooks\");","map":{"version":3,"names":["useNavigate","SearchLogic","classes","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ShowAvailableBooks","booksData","lastImageRef","isLoading","_s","navigate","searchResults","setSearchResults","handleSelectBook","id","children","className","container","siteNameFetch","fileName","_jsxFileName","lineNumber","columnNumber","onResultsChange","bookscategory","length","books","map","book","index","title","volumeInfo","bookitem","imageLinks","thumbnail","onClick","skeletoncard","skeletonimage","skeletontitle","src","alt","ref","booktitle","_c","$RefreshReg$"],"sources":["C:/Users/Msys/OneDrive/Desktop/BookStore/frontend/src/components/ShowAvailableBooks.js"],"sourcesContent":["// import { useNavigate } from 'react-router-dom';\r\n// import SearchLogic from './SearchLogic.js';\r\n// import classes from './ShowAvailableBooks.module.css';\r\n// export default function ShowAvailableBooks({ booksData, lastImageRef, isLoading }) {\r\n//     const navigate = useNavigate();\r\n\r\n//     function handleSelectBook(id) {\r\n//         navigate(`/book/${id}`);\r\n//     }\r\n\r\n//     return (\r\n//         <>\r\n//             <div className={classes.container}>\r\n//                 <h1 className={classes.siteNameFetch}>Design Books</h1>\r\n//                 <div >\r\n//                     <SearchLogic />\r\n//                 </div>\r\n//             </div>\r\n//             <section className={classes.bookscategory}>\r\n//                 {booksData && booksData.length > 0 ? (\r\n//                     <ul className={classes.books}>\r\n//                         {booksData.map((book, index) => {\r\n//                             const title = book.title || 'No Title';\r\n//                             if (title === 'No Title') {\r\n//                                 return null;\r\n//                             }\r\n\r\n//                             return (\r\n//                                 <li key={`${book.id}-${index}`} className={classes.bookitem}>\r\n//                                     {book.imageLinks && book.imageLinks.thumbnail ? (\r\n//                                         <button onClick={() => handleSelectBook(book.id)}>\r\n//                                             {isLoading ? (\r\n//                                                 <div className={classes.skeletoncard}>\r\n//                                                     <div className={classes.skeletonimage}></div>\r\n//                                                     <div className={classes.skeletontitle}></div>\r\n//                                                 </div>\r\n//                                             ) : (\r\n//                                                 <>\r\n//                                                     <img\r\n//                                                         src={book.imageLinks.thumbnail}\r\n//                                                         alt={`Book ${index + 1}`}\r\n//                                                         ref={index === booksData.length - 1 ? lastImageRef : null}\r\n//                                                     />\r\n//                                                     <p className={classes.booktitle}>{title}</p>\r\n//                                                 </>\r\n//                                             )}\r\n//                                         </button>\r\n//                                     ) : (\r\n//                                         <p>No image available</p>\r\n//                                     )}\r\n//                                 </li>\r\n//                             );\r\n//                         })}\r\n//                     </ul>\r\n//                 ) : (\r\n//                     <p>Loading...</p>\r\n//                 )}\r\n//             </section>\r\n//         </>\r\n\r\n//     );\r\n// }\r\n\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SearchLogic from './SearchLogic.js';\r\nimport classes from './ShowAvailableBooks.module.css';\r\nimport { useState } from 'react';\r\n\r\nexport default function ShowAvailableBooks({ booksData, lastImageRef, isLoading }) {\r\n    const navigate = useNavigate();\r\n    const [searchResults, setSearchResults] = useState([]);\r\n\r\n    function handleSelectBook(id) {\r\n        navigate(`/book/${id}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.container}>\r\n                <h1 className={classes.siteNameFetch}>Design Books</h1>\r\n                <div>\r\n                    <SearchLogic onResultsChange={setSearchResults} />\r\n                </div>\r\n            </div>\r\n            <section className={classes.bookscategory}>\r\n                {searchResults.length > 0 ? (\r\n                    <ul className={classes.books}>\r\n                        {searchResults.map((book, index) => {\r\n                            const title = book.volumeInfo.title || 'No Title';\r\n                            if (title === 'No Title') {\r\n                                return null;\r\n                            }\r\n\r\n                            return (\r\n                                <li key={`${book.id}-${index}`} className={classes.bookitem}>\r\n                                    {book.volumeInfo.imageLinks && book.volumeInfo.imageLinks.thumbnail ? (\r\n                                        <button onClick={() => handleSelectBook(book.id)}>\r\n                                            {isLoading ? (\r\n                                                <div className={classes.skeletoncard}>\r\n                                                    <div className={classes.skeletonimage}></div>\r\n                                                    <div className={classes.skeletontitle}></div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <>\r\n                                                    <img\r\n                                                        src={book.volumeInfo.imageLinks.thumbnail}\r\n                                                        alt={`Book ${index + 1}`}\r\n                                                        ref={index === searchResults.length - 1 ? lastImageRef : null}\r\n                                                    />\r\n                                                    <p className={classes.booktitle}>{title}</p>\r\n                                                </>\r\n                                            )}\r\n                                        </button>\r\n                                    ) : (\r\n                                        <p>No image available</p>\r\n                                    )}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                ) : (\r\n                    <p>Loading...</p>\r\n                )}\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}