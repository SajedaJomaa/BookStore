{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Msys\\\\OneDrive\\\\Desktop\\\\BookStore\\\\frontend\\\\src\\\\components\\\\ShowAvailableBooks.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\n\n// import Spinner from './Spinner.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ShowAvailableBooks({\n  booksData,\n  lastImageRef,\n  isLoading\n}) {\n  _s();\n  const navigate = useNavigate();\n  function handleSelectBook(id) {\n    navigate(`/book/${id}`);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"books-category\",\n    children: booksData && booksData.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"books\",\n      children: booksData.map((book, index) => {\n        const title = book.title || 'No Title';\n        if (title === 'No Title') {\n          return null; // Skip rendering if the title is \"No Title\"\n        }\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"book-item\",\n          children: book.imageLinks && book.imageLinks.thumbnail ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSelectBook(book.id),\n            children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"double-bounce1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"double-bounce2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 45\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: book.imageLinks.thumbnail,\n                alt: `Book ${index + 1}`,\n                ref: index === booksData.length - 1 ? lastImageRef : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"book-title\",\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No image available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 37\n          }, this)\n        }, `${book.id}-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this)\n\n  // <section className=\"books-category\">\n  //     {isLoading ? (\n  //         <div className=\"spinner\">\n  //             <div className=\"double-bounce1\"></div>\n  //             <div className=\"double-bounce2\"></div>\n  //         </div>\n  //     ) : booksData && booksData.length > 0 ? (\n  //         <ul className=\"books\">\n  //             {booksData.map((book, index) => {\n  //                 const title = book.title || 'No Title';\n  //                 if (title === 'No Title') {\n  //                     return null;\n  //                 }\n\n  //                 return (\n  //                     <li key={`${book.id}-${index}`} className=\"book-item\">\n  //                         {book.imageLinks && book.imageLinks.thumbnail ? (\n  //                             <button onClick={() => handleSelectBook(book.id)}>\n  //                                 <img\n  //                                     src={book.imageLinks.thumbnail}\n  //                                     alt={`Book ${index + 1}`}\n  //                                     ref={index === booksData.length - 1 ? lastImageRef : null}\n  //                                 />\n  //                                 <p className=\"book-title\">{title}</p>\n  //                             </button>\n  //                         ) : (\n  //                             <p>No image available</p>\n  //                         )}\n  //                     </li>\n  //                 );\n  //             })}\n  //         </ul>\n  //     ) : (\n  //         <p>No books available.</p>\n  //     )}\n  // </section>\n  ;\n}\n_s(ShowAvailableBooks, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = ShowAvailableBooks;\nvar _c;\n$RefreshReg$(_c, \"ShowAvailableBooks\");","map":{"version":3,"names":["useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ShowAvailableBooks","booksData","lastImageRef","isLoading","_s","navigate","handleSelectBook","id","className","children","length","map","book","index","title","imageLinks","thumbnail","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","ref","_c","$RefreshReg$"],"sources":["C:/Users/Msys/OneDrive/Desktop/BookStore/frontend/src/components/ShowAvailableBooks.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\r\n\r\n// import Spinner from './Spinner.js';\r\nexport default function ShowAvailableBooks({ booksData, lastImageRef, isLoading }) {\r\n    const navigate = useNavigate();\r\n\r\n    function handleSelectBook(id) {\r\n        navigate(`/book/${id}`);\r\n    }\r\n\r\n    return (\r\n        <section className=\"books-category\">\r\n            {booksData && booksData.length > 0 ? (\r\n                <ul className=\"books\">\r\n                    {booksData.map((book, index) => {\r\n                        const title = book.title || 'No Title';\r\n                        if (title === 'No Title') {\r\n                            return null; // Skip rendering if the title is \"No Title\"\r\n                        }\r\n\r\n                        return (\r\n                            <li key={`${book.id}-${index}`} className=\"book-item\">\r\n                                {book.imageLinks && book.imageLinks.thumbnail ? (\r\n                                    <button onClick={() => handleSelectBook(book.id)}>\r\n                                        {isLoading ? (\r\n                                            <div className=\"spinner\">\r\n                                                <div className=\"double-bounce1\"></div>\r\n                                                <div className=\"double-bounce2\"></div>\r\n                                            </div>\r\n                                        ) : (\r\n                                            <>\r\n                                                <img\r\n                                                    src={book.imageLinks.thumbnail}\r\n                                                    alt={`Book ${index + 1}`}\r\n                                                    ref={index === booksData.length - 1 ? lastImageRef : null}\r\n                                                />\r\n                                                <p className=\"book-title\">{title}</p>\r\n                                            </>\r\n                                        )}\r\n                                    </button>\r\n                                ) : (\r\n                                    <p>No image available</p>\r\n                                )}\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            ) : (\r\n                <p>Loading...</p>\r\n            )}\r\n        </section>\r\n\r\n        // <section className=\"books-category\">\r\n        //     {isLoading ? (\r\n        //         <div className=\"spinner\">\r\n        //             <div className=\"double-bounce1\"></div>\r\n        //             <div className=\"double-bounce2\"></div>\r\n        //         </div>\r\n        //     ) : booksData && booksData.length > 0 ? (\r\n        //         <ul className=\"books\">\r\n        //             {booksData.map((book, index) => {\r\n        //                 const title = book.title || 'No Title';\r\n        //                 if (title === 'No Title') {\r\n        //                     return null;\r\n        //                 }\r\n\r\n        //                 return (\r\n        //                     <li key={`${book.id}-${index}`} className=\"book-item\">\r\n        //                         {book.imageLinks && book.imageLinks.thumbnail ? (\r\n        //                             <button onClick={() => handleSelectBook(book.id)}>\r\n        //                                 <img\r\n        //                                     src={book.imageLinks.thumbnail}\r\n        //                                     alt={`Book ${index + 1}`}\r\n        //                                     ref={index === booksData.length - 1 ? lastImageRef : null}\r\n        //                                 />\r\n        //                                 <p className=\"book-title\">{title}</p>\r\n        //                             </button>\r\n        //                         ) : (\r\n        //                             <p>No image available</p>\r\n        //                         )}\r\n        //                     </li>\r\n        //                 );\r\n        //             })}\r\n        //         </ul>\r\n        //     ) : (\r\n        //         <p>No books available.</p>\r\n        //     )}\r\n        // </section>\r\n\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}