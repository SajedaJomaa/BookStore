{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Msys\\\\OneDrive\\\\Desktop\\\\BookStore\\\\frontend\\\\src\\\\components\\\\ShowAvailableBooks.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport './Spinner.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowAvailableBooks({\n  booksData,\n  lastImageRef,\n  isLoading\n}) {\n  _s();\n  const navigate = useNavigate();\n  function handleSelectBook(id) {\n    navigate(`/book/${id}`);\n  }\n  return (\n    /*#__PURE__*/\n    // <section className=\"books-category\">\n    //     {booksData && booksData.length > 0 ? (\n    //         <ul className=\"books\">\n    //             {booksData.map((book, index) => {\n    //                 const title = book.title || 'No Title';\n    //                 if (title === 'No Title') {\n    //                     return null;\n    //                 }\n    //                 return (\n    //                     <li key={`${book.id}-${index}`} className=\"book-item\">\n    //                         {book.imageLinks && book.imageLinks.thumbnail ? (\n    //                             <button onClick={() => handleSelectBook(book.id)}>\n    //                                 <img\n    //                                     src={book.imageLinks.thumbnail}\n    //                                     alt={`Book ${index + 1}`}\n    //                                     ref={index === booksData.length - 1 ? lastImageRef : null}\n    //                                 />\n    //                                 <p className=\"book-title\">{title}</p>\n    //                             </button>\n    //                         ) : (\n    //                             <p>No image available</p>\n    //                         )}\n    //                     </li>\n    //                 );\n    //             })}\n    //         </ul>\n    //     ) : (\n    //         <p>Loading...</p>\n    //     )}\n    // </section>\n    _jsxDEV(\"section\", {\n      className: \"books-category\",\n      children: isLoading ?\n      /*#__PURE__*/\n      // Check if loading\n      _jsxDEV(\"div\", {\n        className: \"spinner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"double-bounce1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"double-bounce2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this) : booksData && booksData.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"books\",\n        children: booksData.map((book, index) => {\n          const title = book.title || 'No Title';\n          if (title === 'No Title') {\n            return null;\n          }\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"book-item\",\n            children: book.imageLinks && book.imageLinks.thumbnail ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSelectBook(book.id),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: book.imageLinks.thumbnail,\n                alt: `Book ${index + 1}`,\n                ref: index === booksData.length - 1 ? lastImageRef : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"book-title\",\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No image available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 37\n            }, this)\n          }, `${book.id}-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No books available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(ShowAvailableBooks, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = ShowAvailableBooks;\nvar _c;\n$RefreshReg$(_c, \"ShowAvailableBooks\");","map":{"version":3,"names":["useNavigate","jsxDEV","_jsxDEV","ShowAvailableBooks","booksData","lastImageRef","isLoading","_s","navigate","handleSelectBook","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","book","index","title","imageLinks","thumbnail","onClick","src","alt","ref","_c","$RefreshReg$"],"sources":["C:/Users/Msys/OneDrive/Desktop/BookStore/frontend/src/components/ShowAvailableBooks.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\r\n\r\nimport './Spinner.module.css';\r\nexport default function ShowAvailableBooks({ booksData, lastImageRef, isLoading }) {\r\n    const navigate = useNavigate();\r\n\r\n    function handleSelectBook(id) {\r\n        navigate(`/book/${id}`);\r\n    }\r\n\r\n    return (\r\n        // <section className=\"books-category\">\r\n        //     {booksData && booksData.length > 0 ? (\r\n        //         <ul className=\"books\">\r\n        //             {booksData.map((book, index) => {\r\n        //                 const title = book.title || 'No Title';\r\n        //                 if (title === 'No Title') {\r\n        //                     return null;\r\n        //                 }\r\n\r\n        //                 return (\r\n        //                     <li key={`${book.id}-${index}`} className=\"book-item\">\r\n        //                         {book.imageLinks && book.imageLinks.thumbnail ? (\r\n        //                             <button onClick={() => handleSelectBook(book.id)}>\r\n        //                                 <img\r\n        //                                     src={book.imageLinks.thumbnail}\r\n        //                                     alt={`Book ${index + 1}`}\r\n        //                                     ref={index === booksData.length - 1 ? lastImageRef : null}\r\n        //                                 />\r\n        //                                 <p className=\"book-title\">{title}</p>\r\n        //                             </button>\r\n        //                         ) : (\r\n        //                             <p>No image available</p>\r\n        //                         )}\r\n        //                     </li>\r\n        //                 );\r\n        //             })}\r\n        //         </ul>\r\n        //     ) : (\r\n        //         <p>Loading...</p>\r\n        //     )}\r\n        // </section>\r\n        <section className=\"books-category\">\r\n            {isLoading ? ( // Check if loading\r\n                <div className=\"spinner\">\r\n                    <div className=\"double-bounce1\"></div>\r\n                    <div className=\"double-bounce2\"></div>\r\n                </div>\r\n            ) : booksData && booksData.length > 0 ? (\r\n                <ul className=\"books\">\r\n                    {booksData.map((book, index) => {\r\n                        const title = book.title || 'No Title';\r\n                        if (title === 'No Title') {\r\n                            return null;\r\n                        }\r\n\r\n                        return (\r\n                            <li key={`${book.id}-${index}`} className=\"book-item\">\r\n                                {book.imageLinks && book.imageLinks.thumbnail ? (\r\n                                    <button onClick={() => handleSelectBook(book.id)}>\r\n                                        <img\r\n                                            src={book.imageLinks.thumbnail}\r\n                                            alt={`Book ${index + 1}`}\r\n                                            ref={index === booksData.length - 1 ? lastImageRef : null}\r\n                                        />\r\n                                        <p className=\"book-title\">{title}</p>\r\n                                    </button>\r\n                                ) : (\r\n                                    <p>No image available</p>\r\n                                )}\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            ) : (\r\n                <p>No books available.</p>\r\n            )}\r\n        </section>\r\n\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}