{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Msys\\\\OneDrive\\\\Desktop\\\\tryAgain\\\\frontend\\\\src\\\\components\\\\BookInfo.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import Modal from './Modal.js';\n// import { getAuthToken } from '../util/auth';\n\n// export default function BookInfo({ book }) {\n//     const [showModal, setShowModal] = useState(false);\n//     const [rating, setRating] = useState(book.volumeInfo.averageRating || 0);\n//     const [hover, setHover] = useState(book.volumeInfo.averageRating || 0);\n//     const [isLoading, setIsLoading] = useState(false);\n//     const [isBuying, setIsBuying] = useState(false);\n\n//     const handleRatingChange = (value) => {\n//         setRating(value);\n//     };\n\n//     const openModal = () => {\n//         setShowModal(true);\n//     };\n\n//     const closeModal = () => {\n//         setShowModal(false);\n//     };\n\n//     const handleBuyBook = async () => {\n//         setIsLoading(true);\n//         const token = getAuthToken();\n//         try {\n//             const response = await fetch('http://localhost:8080/events/', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Authorization': 'Bearer ' + token\n//                 },\n//                 body: JSON.stringify({\n//                     id: book.id,\n//                 }),\n//             });\n\n//             if (response.ok) {\n//                 setIsBuying(true);\n//                 setTimeout(() => {\n//                     setIsBuying(false);\n//                     closeModal();\n//                 }, 1000);\n//             } else {\n//                 throw new Error('Failed to buy the book');\n//             }\n//         } catch (error) {\n//             console.error(\"Error buying the book:\", error);\n//         } finally {\n//             setIsLoading(false);\n//         }\n//     };\n\n//     const { volumeInfo } = book;\n//     const { title, description, authors, pageCount, imageLinks } = volumeInfo;\n\n//     return (\n//         <section className='book-detail'>\n//             <div className='book-info'>\n//                 {imageLinks && imageLinks.thumbnail && (\n//                     <img src={imageLinks.thumbnail} alt={title} />\n//                 )}\n//                 <div className='book-data'>\n//                     <h1>{title}</h1>\n//                     <p>Author: {authors ? authors.join(', ') : 'Unknown'}</p>\n//                     <p>Page Count: {pageCount}</p>\n\n//                     <p>Rate this book:</p>\n//                     <div className=\"star-rating\">\n//                         {[...Array(5)].map((star, index) => {\n//                             index += 1;\n//                             return (\n//                                 <label key={index}>\n//                                     <input\n//                                         type=\"radio\"\n//                                         name=\"rating\"\n//                                         value={index}\n//                                         onClick={() => handleRatingChange(index)}\n//                                     />\n//                                     <i\n//                                         className={index <= (hover || rating) ? \"fas fa-star\" : \"far fa-star\"}\n//                                         onMouseEnter={() => setHover(index)}\n//                                         onMouseLeave={() => setHover(rating)}\n//                                     ></i>\n//                                 </label>\n//                             );\n//                         })}\n//                     </div>\n//                     <div className='book-detail-button'>\n//                         <button onClick={openModal} className='book-button-buy'>Buy</button>\n\n//                         <input type=\"checkbox\" id=\"like-checkbox\" className=\"like-checkbox\" />\n//                         <label htmlFor=\"like-checkbox\" className=\"button-like\">\n//                             <i className=\"fa fa-heart\"></i>\n//                             <span>Like</span>\n//                         </label>\n//                     </div>\n//                 </div>\n//             </div>\n//             <div className='book-description'>\n//                 <p>{description}</p>\n//             </div>\n\n//             <Modal open={showModal} onClose={closeModal}>\n//                 <div className=\"modal-content\">\n//                     <div className=\"modal-header\">\n//                         <h2>Confirm Purchase</h2>\n//                     </div>\n//                     <div className=\"modal-body\">\n//                         <p>Are you sure you want to buy this book?</p>\n//                     </div>\n//                     <div className=\"modal-footer\">\n//                         <button onClick={handleBuyBook} disabled={isLoading || isBuying}>\n//                             {isLoading ? <div className=\"spinner\"></div> : <p>Yes</p>}\n//                         </button>\n//                         <button onClick={closeModal}><p>No</p></button>\n//                     </div>\n//                 </div>\n//             </Modal>\n//         </section>\n//     );\n// }\n\nimport React, { useState } from 'react';\nimport Modal from './Modal.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BookInfo({\n  book\n}) {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [rating, setRating] = useState(book.volumeInfo.averageRating || 0);\n  const [hover, setHover] = useState(book.volumeInfo.averageRating || 0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isBuying, setIsBuying] = useState(false);\n  const [purchaseSuccess, setPurchaseSuccess] = useState(false);\n  const handleRatingChange = value => {\n    setRating(value);\n  };\n  const openModal = () => {\n    setShowModal(true);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n    setPurchaseSuccess(false); // Reset the purchase success state when closing the modal\n  };\n  const handleBuyBook = async () => {\n    setIsLoading(true);\n    const token = getAuthToken();\n    try {\n      const response = await fetch('http://localhost:8080/events/', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer ' + token\n        },\n        body: JSON.stringify({\n          id: book.id\n        })\n      });\n      if (response.ok) {\n        setIsBuying(true);\n        setPurchaseSuccess(true);\n        setTimeout(() => {\n          setIsBuying(false);\n        }, 1000);\n      } else {\n        throw new Error('Failed to buy the book');\n      }\n    } catch (error) {\n      console.error(\"Error buying the book:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const {\n    volumeInfo\n  } = book;\n  const {\n    title,\n    description,\n    authors,\n    pageCount,\n    imageLinks\n  } = volumeInfo;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"book-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-info\",\n      children: [imageLinks && imageLinks.thumbnail && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageLinks.thumbnail,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Author: \", authors ? authors.join(', ') : 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Page Count: \", pageCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Rate this book:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"star-rating\",\n          children: [...Array(5)].map((star, index) => {\n            index += 1;\n            return /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"rating\",\n                value: index,\n                onClick: () => handleRatingChange(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: index <= (hover || rating) ? \"fas fa-star\" : \"far fa-star\",\n                onMouseEnter: () => setHover(index),\n                onMouseLeave: () => setHover(rating)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-detail-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: openModal,\n            className: \"book-button-buy\",\n            children: \"Buy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"like-checkbox\",\n            className: \"like-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"like-checkbox\",\n            className: \"button-like\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-heart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-description\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: showModal,\n      onClose: closeModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Confirm Purchase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Are you sure you want to buy this book?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: purchaseSuccess ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Book purchased successfully!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleBuyBook,\n              disabled: isLoading || isBuying,\n              children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 50\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Yes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 84\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeModal,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 9\n  }, this);\n}\n_s(BookInfo, \"BqyUPoNX4agJ6Fjy4Bpi0yUpUAw=\");\n_c = BookInfo;\nvar _c;\n$RefreshReg$(_c, \"BookInfo\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","BookInfo","book","_s","showModal","setShowModal","rating","setRating","volumeInfo","averageRating","hover","setHover","isLoading","setIsLoading","isBuying","setIsBuying","purchaseSuccess","setPurchaseSuccess","handleRatingChange","value","openModal","closeModal","handleBuyBook","token","getAuthToken","response","fetch","method","headers","body","JSON","stringify","id","ok","setTimeout","Error","error","console","title","description","authors","pageCount","imageLinks","className","children","thumbnail","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","join","Array","map","star","index","type","name","onClick","onMouseEnter","onMouseLeave","htmlFor","open","onClose","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Msys/OneDrive/Desktop/tryAgain/frontend/src/components/BookInfo.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import Modal from './Modal.js';\r\n// import { getAuthToken } from '../util/auth';\r\n\r\n// export default function BookInfo({ book }) {\r\n//     const [showModal, setShowModal] = useState(false);\r\n//     const [rating, setRating] = useState(book.volumeInfo.averageRating || 0);\r\n//     const [hover, setHover] = useState(book.volumeInfo.averageRating || 0);\r\n//     const [isLoading, setIsLoading] = useState(false);\r\n//     const [isBuying, setIsBuying] = useState(false);\r\n\r\n\r\n//     const handleRatingChange = (value) => {\r\n//         setRating(value);\r\n//     };\r\n\r\n//     const openModal = () => {\r\n//         setShowModal(true);\r\n//     };\r\n\r\n//     const closeModal = () => {\r\n//         setShowModal(false);\r\n//     };\r\n\r\n//     const handleBuyBook = async () => {\r\n//         setIsLoading(true);\r\n//         const token = getAuthToken();\r\n//         try {\r\n//             const response = await fetch('http://localhost:8080/events/', {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Authorization': 'Bearer ' + token\r\n//                 },\r\n//                 body: JSON.stringify({\r\n//                     id: book.id,\r\n//                 }),\r\n//             });\r\n\r\n//             if (response.ok) {\r\n//                 setIsBuying(true);\r\n//                 setTimeout(() => {\r\n//                     setIsBuying(false);\r\n//                     closeModal();\r\n//                 }, 1000);\r\n//             } else {\r\n//                 throw new Error('Failed to buy the book');\r\n//             }\r\n//         } catch (error) {\r\n//             console.error(\"Error buying the book:\", error);\r\n//         } finally {\r\n//             setIsLoading(false);\r\n//         }\r\n//     };\r\n\r\n//     const { volumeInfo } = book;\r\n//     const { title, description, authors, pageCount, imageLinks } = volumeInfo;\r\n\r\n//     return (\r\n//         <section className='book-detail'>\r\n//             <div className='book-info'>\r\n//                 {imageLinks && imageLinks.thumbnail && (\r\n//                     <img src={imageLinks.thumbnail} alt={title} />\r\n//                 )}\r\n//                 <div className='book-data'>\r\n//                     <h1>{title}</h1>\r\n//                     <p>Author: {authors ? authors.join(', ') : 'Unknown'}</p>\r\n//                     <p>Page Count: {pageCount}</p>\r\n\r\n//                     <p>Rate this book:</p>\r\n//                     <div className=\"star-rating\">\r\n//                         {[...Array(5)].map((star, index) => {\r\n//                             index += 1;\r\n//                             return (\r\n//                                 <label key={index}>\r\n//                                     <input\r\n//                                         type=\"radio\"\r\n//                                         name=\"rating\"\r\n//                                         value={index}\r\n//                                         onClick={() => handleRatingChange(index)}\r\n//                                     />\r\n//                                     <i\r\n//                                         className={index <= (hover || rating) ? \"fas fa-star\" : \"far fa-star\"}\r\n//                                         onMouseEnter={() => setHover(index)}\r\n//                                         onMouseLeave={() => setHover(rating)}\r\n//                                     ></i>\r\n//                                 </label>\r\n//                             );\r\n//                         })}\r\n//                     </div>\r\n//                     <div className='book-detail-button'>\r\n//                         <button onClick={openModal} className='book-button-buy'>Buy</button>\r\n\r\n//                         <input type=\"checkbox\" id=\"like-checkbox\" className=\"like-checkbox\" />\r\n//                         <label htmlFor=\"like-checkbox\" className=\"button-like\">\r\n//                             <i className=\"fa fa-heart\"></i>\r\n//                             <span>Like</span>\r\n//                         </label>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//             <div className='book-description'>\r\n//                 <p>{description}</p>\r\n//             </div>\r\n\r\n//             <Modal open={showModal} onClose={closeModal}>\r\n//                 <div className=\"modal-content\">\r\n//                     <div className=\"modal-header\">\r\n//                         <h2>Confirm Purchase</h2>\r\n//                     </div>\r\n//                     <div className=\"modal-body\">\r\n//                         <p>Are you sure you want to buy this book?</p>\r\n//                     </div>\r\n//                     <div className=\"modal-footer\">\r\n//                         <button onClick={handleBuyBook} disabled={isLoading || isBuying}>\r\n//                             {isLoading ? <div className=\"spinner\"></div> : <p>Yes</p>}\r\n//                         </button>\r\n//                         <button onClick={closeModal}><p>No</p></button>\r\n//                     </div>\r\n//                 </div>\r\n//             </Modal>\r\n//         </section>\r\n//     );\r\n// }\r\n\r\nimport React, { useState } from 'react';\r\nimport Modal from './Modal.js';\r\n\r\nexport default function BookInfo({ book }) {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [rating, setRating] = useState(book.volumeInfo.averageRating || 0);\r\n    const [hover, setHover] = useState(book.volumeInfo.averageRating || 0);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isBuying, setIsBuying] = useState(false);\r\n    const [purchaseSuccess, setPurchaseSuccess] = useState(false);\r\n\r\n    const handleRatingChange = (value) => {\r\n        setRating(value);\r\n    };\r\n\r\n    const openModal = () => {\r\n        setShowModal(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setShowModal(false);\r\n        setPurchaseSuccess(false);  // Reset the purchase success state when closing the modal\r\n    };\r\n\r\n    const handleBuyBook = async () => {\r\n        setIsLoading(true);\r\n        const token = getAuthToken();\r\n        try {\r\n            const response = await fetch('http://localhost:8080/events/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + token\r\n                },\r\n                body: JSON.stringify({\r\n                    id: book.id,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                setIsBuying(true);\r\n                setPurchaseSuccess(true);\r\n                setTimeout(() => {\r\n                    setIsBuying(false);\r\n                }, 1000);\r\n            } else {\r\n                throw new Error('Failed to buy the book');\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error buying the book:\", error);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const { volumeInfo } = book;\r\n    const { title, description, authors, pageCount, imageLinks } = volumeInfo;\r\n\r\n    return (\r\n        <section className='book-detail'>\r\n            <div className='book-info'>\r\n                {imageLinks && imageLinks.thumbnail && (\r\n                    <img src={imageLinks.thumbnail} alt={title} />\r\n                )}\r\n                <div className='book-data'>\r\n                    <h1>{title}</h1>\r\n                    <p>Author: {authors ? authors.join(', ') : 'Unknown'}</p>\r\n                    <p>Page Count: {pageCount}</p>\r\n\r\n                    <p>Rate this book:</p>\r\n                    <div className=\"star-rating\">\r\n                        {[...Array(5)].map((star, index) => {\r\n                            index += 1;\r\n                            return (\r\n                                <label key={index}>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"rating\"\r\n                                        value={index}\r\n                                        onClick={() => handleRatingChange(index)}\r\n                                    />\r\n                                    <i\r\n                                        className={index <= (hover || rating) ? \"fas fa-star\" : \"far fa-star\"}\r\n                                        onMouseEnter={() => setHover(index)}\r\n                                        onMouseLeave={() => setHover(rating)}\r\n                                    ></i>\r\n                                </label>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                    <div className='book-detail-button'>\r\n                        <button onClick={openModal} className='book-button-buy'>Buy</button>\r\n\r\n                        <input type=\"checkbox\" id=\"like-checkbox\" className=\"like-checkbox\" />\r\n                        <label htmlFor=\"like-checkbox\" className=\"button-like\">\r\n                            <i className=\"fa fa-heart\"></i>\r\n                            <span>Like</span>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='book-description'>\r\n                <p>{description}</p>\r\n            </div>\r\n\r\n            <Modal open={showModal} onClose={closeModal}>\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2>Confirm Purchase</h2>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <p>Are you sure you want to buy this book?</p>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        {purchaseSuccess ? (\r\n                            <p>Book purchased successfully!</p>\r\n                        ) : (\r\n                            <>\r\n                                <button onClick={handleBuyBook} disabled={isLoading || isBuying}>\r\n                                    {isLoading ? <div className=\"spinner\"></div> : <p>Yes</p>}\r\n                                </button>\r\n                                <button onClick={closeModal}><p>No</p></button>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </section>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}